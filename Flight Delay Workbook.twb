<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0611.2007                               -->
<workbook original-version='18.1' source-build='2023.2.0 (20232.23.0611.2007)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFilters />
    <CascadingFiltersHamburgerUI />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='FlightDelayWorkbook_16917881214650' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='flights.csv+ (Multiple Connections)' inline='true' name='federated.133eozg02trsfq1g9xb1j1lsvdsg' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='airports' name='textscan.0dqhtzl068zo8o1f7ca4o19njrtp'>
            <connection class='textscan' directory='/Users/lyttonliang/Desktop/Accelerator/WGU_Fall2023/Data_Visualization/Project/Flight Delays and Cancellations' filename='airports.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='airlines' name='textscan.1ex5t041aiixsq17smrft0ibuzli'>
            <connection class='textscan' directory='/Users/lyttonliang/Desktop/Accelerator/WGU_Fall2023/Data_Visualization/Project/Flight Delays and Cancellations' filename='airlines.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='flights' name='textscan.0r01osj0x42bbv1dt1elf0v5ybt3'>
            <connection class='textscan' directory='/Users/lyttonliang/Desktop/Accelerator/WGU_Fall2023/Data_Visualization/Project/Flight Delays and Cancellations' filename='flights.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[flights.csv].[Destination_IATA_CODE]' />
              <expression op='[airports.csv1].[IATA_CODE]' />
            </expression>
          </clause>
          <relation join='left' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[flights.csv].[Departure_IATA_CODE]' />
                <expression op='[airports.csv].[IATA_CODE]' />
              </expression>
            </clause>
            <relation join='left' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[flights.csv].[AIRLINE_CODE]' />
                  <expression op='[airlines.csv].[Airline_CODE]' />
                </expression>
              </clause>
              <relation connection='textscan.0r01osj0x42bbv1dt1elf0v5ybt3' name='flights.csv' table='[flights#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='Unnamed: 0' ordinal='1' />
                  <column datatype='integer' name='Unnamed: 0.1' ordinal='2' />
                  <column datatype='integer' name='YEAR' ordinal='3' />
                  <column datatype='integer' name='MONTH' ordinal='4' />
                  <column datatype='integer' name='DAY' ordinal='5' />
                  <column datatype='integer' name='DAY_OF_WEEK' ordinal='6' />
                  <column datatype='string' name='AIRLINE_CODE' ordinal='7' />
                  <column datatype='integer' name='FLIGHT_NUMBER' ordinal='8' />
                  <column datatype='string' name='TAIL_NUMBER' ordinal='9' />
                  <column datatype='string' name='Departure_IATA_CODE' ordinal='10' />
                  <column datatype='string' name='Destination_IATA_CODE' ordinal='11' />
                  <column datatype='integer' name='SCHEDULED_DEPARTURE' ordinal='12' />
                  <column datatype='integer' name='DEPARTURE_TIME' ordinal='13' />
                  <column datatype='integer' name='DEPARTURE_DELAY' ordinal='14' />
                  <column datatype='integer' name='TAXI_OUT' ordinal='15' />
                  <column datatype='integer' name='WHEELS_OFF' ordinal='16' />
                  <column datatype='integer' name='SCHEDULED_TIME' ordinal='17' />
                  <column datatype='integer' name='ELAPSED_TIME' ordinal='18' />
                  <column datatype='integer' name='AIR_TIME' ordinal='19' />
                  <column datatype='integer' name='DISTANCE' ordinal='20' />
                  <column datatype='integer' name='WHEELS_ON' ordinal='21' />
                  <column datatype='integer' name='TAXI_IN' ordinal='22' />
                  <column datatype='integer' name='SCHEDULED_ARRIVAL' ordinal='23' />
                  <column datatype='integer' name='ARRIVAL_TIME' ordinal='24' />
                  <column datatype='integer' name='ARRIVAL_DELAY' ordinal='25' />
                  <column datatype='integer' name='DIVERTED' ordinal='26' />
                  <column datatype='integer' name='CANCELLED' ordinal='27' />
                  <column datatype='string' name='CANCELLATION_REASON' ordinal='28' />
                  <column datatype='integer' name='AIR_SYSTEM_DELAY' ordinal='29' />
                  <column datatype='integer' name='SECURITY_DELAY' ordinal='30' />
                  <column datatype='integer' name='AIRLINE_DELAY' ordinal='31' />
                  <column datatype='integer' name='LATE_AIRCRAFT_DELAY' ordinal='32' />
                  <column datatype='integer' name='WEATHER_DELAY' ordinal='33' />
                </columns>
              </relation>
              <relation connection='textscan.0r01osj0x42bbv1dt1elf0v5ybt3' name='airlines.csv' table='[airlines#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Airline_CODE' ordinal='0' />
                  <column datatype='string' name='AIRLINE' ordinal='1' />
                </columns>
              </relation>
            </relation>
            <relation connection='textscan.0r01osj0x42bbv1dt1elf0v5ybt3' name='airports.csv' table='[airports#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='string' name='IATA_CODE' ordinal='0' />
                <column datatype='string' name='AIRPORT' ordinal='1' />
                <column datatype='string' name='CITY' ordinal='2' />
                <column datatype='string' name='STATE' ordinal='3' />
                <column datatype='string' name='COUNTRY' ordinal='4' />
                <column datatype='real' name='LATITUDE' ordinal='5' />
                <column datatype='real' name='LONGITUDE' ordinal='6' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.0r01osj0x42bbv1dt1elf0v5ybt3' name='airports.csv1' table='[airports#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='IATA_CODE' ordinal='0' />
              <column datatype='string' name='AIRPORT' ordinal='1' />
              <column datatype='string' name='CITY' ordinal='2' />
              <column datatype='string' name='STATE' ordinal='3' />
              <column datatype='string' name='COUNTRY' ordinal='4' />
              <column datatype='real' name='LATITUDE' ordinal='5' />
              <column datatype='real' name='LONGITUDE' ordinal='6' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[flights.csv].[Destination_IATA_CODE]' />
              <expression op='[airports.csv1].[IATA_CODE]' />
            </expression>
          </clause>
          <relation join='left' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[flights.csv].[Departure_IATA_CODE]' />
                <expression op='[airports.csv].[IATA_CODE]' />
              </expression>
            </clause>
            <relation join='left' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[flights.csv].[AIRLINE_CODE]' />
                  <expression op='[airlines.csv].[Airline_CODE]' />
                </expression>
              </clause>
              <relation connection='textscan.0r01osj0x42bbv1dt1elf0v5ybt3' name='flights.csv' table='[flights#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='Unnamed: 0' ordinal='1' />
                  <column datatype='integer' name='Unnamed: 0.1' ordinal='2' />
                  <column datatype='integer' name='YEAR' ordinal='3' />
                  <column datatype='integer' name='MONTH' ordinal='4' />
                  <column datatype='integer' name='DAY' ordinal='5' />
                  <column datatype='integer' name='DAY_OF_WEEK' ordinal='6' />
                  <column datatype='string' name='AIRLINE_CODE' ordinal='7' />
                  <column datatype='integer' name='FLIGHT_NUMBER' ordinal='8' />
                  <column datatype='string' name='TAIL_NUMBER' ordinal='9' />
                  <column datatype='string' name='Departure_IATA_CODE' ordinal='10' />
                  <column datatype='string' name='Destination_IATA_CODE' ordinal='11' />
                  <column datatype='integer' name='SCHEDULED_DEPARTURE' ordinal='12' />
                  <column datatype='integer' name='DEPARTURE_TIME' ordinal='13' />
                  <column datatype='integer' name='DEPARTURE_DELAY' ordinal='14' />
                  <column datatype='integer' name='TAXI_OUT' ordinal='15' />
                  <column datatype='integer' name='WHEELS_OFF' ordinal='16' />
                  <column datatype='integer' name='SCHEDULED_TIME' ordinal='17' />
                  <column datatype='integer' name='ELAPSED_TIME' ordinal='18' />
                  <column datatype='integer' name='AIR_TIME' ordinal='19' />
                  <column datatype='integer' name='DISTANCE' ordinal='20' />
                  <column datatype='integer' name='WHEELS_ON' ordinal='21' />
                  <column datatype='integer' name='TAXI_IN' ordinal='22' />
                  <column datatype='integer' name='SCHEDULED_ARRIVAL' ordinal='23' />
                  <column datatype='integer' name='ARRIVAL_TIME' ordinal='24' />
                  <column datatype='integer' name='ARRIVAL_DELAY' ordinal='25' />
                  <column datatype='integer' name='DIVERTED' ordinal='26' />
                  <column datatype='integer' name='CANCELLED' ordinal='27' />
                  <column datatype='string' name='CANCELLATION_REASON' ordinal='28' />
                  <column datatype='integer' name='AIR_SYSTEM_DELAY' ordinal='29' />
                  <column datatype='integer' name='SECURITY_DELAY' ordinal='30' />
                  <column datatype='integer' name='AIRLINE_DELAY' ordinal='31' />
                  <column datatype='integer' name='LATE_AIRCRAFT_DELAY' ordinal='32' />
                  <column datatype='integer' name='WEATHER_DELAY' ordinal='33' />
                </columns>
              </relation>
              <relation connection='textscan.0r01osj0x42bbv1dt1elf0v5ybt3' name='airlines.csv' table='[airlines#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Airline_CODE' ordinal='0' />
                  <column datatype='string' name='AIRLINE' ordinal='1' />
                </columns>
              </relation>
            </relation>
            <relation connection='textscan.0r01osj0x42bbv1dt1elf0v5ybt3' name='airports.csv' table='[airports#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='string' name='IATA_CODE' ordinal='0' />
                <column datatype='string' name='AIRPORT' ordinal='1' />
                <column datatype='string' name='CITY' ordinal='2' />
                <column datatype='string' name='STATE' ordinal='3' />
                <column datatype='string' name='COUNTRY' ordinal='4' />
                <column datatype='real' name='LATITUDE' ordinal='5' />
                <column datatype='real' name='LONGITUDE' ordinal='6' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.0r01osj0x42bbv1dt1elf0v5ybt3' name='airports.csv1' table='[airports#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='IATA_CODE' ordinal='0' />
              <column datatype='string' name='AIRPORT' ordinal='1' />
              <column datatype='string' name='CITY' ordinal='2' />
              <column datatype='string' name='STATE' ordinal='3' />
              <column datatype='string' name='COUNTRY' ordinal='4' />
              <column datatype='real' name='LATITUDE' ordinal='5' />
              <column datatype='real' name='LONGITUDE' ordinal='6' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[AIRLINE]' value='[airlines.csv].[AIRLINE]' />
          <map key='[AIRLINE_CODE]' value='[flights.csv].[AIRLINE_CODE]' />
          <map key='[AIRLINE_DELAY]' value='[flights.csv].[AIRLINE_DELAY]' />
          <map key='[AIRPORT (airports.csv1)]' value='[airports.csv1].[AIRPORT]' />
          <map key='[AIRPORT]' value='[airports.csv].[AIRPORT]' />
          <map key='[AIR_SYSTEM_DELAY]' value='[flights.csv].[AIR_SYSTEM_DELAY]' />
          <map key='[AIR_TIME]' value='[flights.csv].[AIR_TIME]' />
          <map key='[ARRIVAL_DELAY]' value='[flights.csv].[ARRIVAL_DELAY]' />
          <map key='[ARRIVAL_TIME]' value='[flights.csv].[ARRIVAL_TIME]' />
          <map key='[Airline_CODE]' value='[airlines.csv].[Airline_CODE]' />
          <map key='[CANCELLATION_REASON]' value='[flights.csv].[CANCELLATION_REASON]' />
          <map key='[CANCELLED]' value='[flights.csv].[CANCELLED]' />
          <map key='[CITY (airports.csv1)]' value='[airports.csv1].[CITY]' />
          <map key='[CITY]' value='[airports.csv].[CITY]' />
          <map key='[COUNTRY (airports.csv1)]' value='[airports.csv1].[COUNTRY]' />
          <map key='[COUNTRY]' value='[airports.csv].[COUNTRY]' />
          <map key='[DAY]' value='[flights.csv].[DAY]' />
          <map key='[DAY_OF_WEEK]' value='[flights.csv].[DAY_OF_WEEK]' />
          <map key='[DEPARTURE_DELAY]' value='[flights.csv].[DEPARTURE_DELAY]' />
          <map key='[DEPARTURE_TIME]' value='[flights.csv].[DEPARTURE_TIME]' />
          <map key='[DISTANCE]' value='[flights.csv].[DISTANCE]' />
          <map key='[DIVERTED]' value='[flights.csv].[DIVERTED]' />
          <map key='[Departure_IATA_CODE]' value='[flights.csv].[Departure_IATA_CODE]' />
          <map key='[Destination_IATA_CODE]' value='[flights.csv].[Destination_IATA_CODE]' />
          <map key='[ELAPSED_TIME]' value='[flights.csv].[ELAPSED_TIME]' />
          <map key='[F1]' value='[flights.csv].[F1]' />
          <map key='[FLIGHT_NUMBER]' value='[flights.csv].[FLIGHT_NUMBER]' />
          <map key='[IATA_CODE (airports.csv1)]' value='[airports.csv1].[IATA_CODE]' />
          <map key='[IATA_CODE]' value='[airports.csv].[IATA_CODE]' />
          <map key='[LATE_AIRCRAFT_DELAY]' value='[flights.csv].[LATE_AIRCRAFT_DELAY]' />
          <map key='[LATITUDE (airports.csv1)]' value='[airports.csv1].[LATITUDE]' />
          <map key='[LATITUDE]' value='[airports.csv].[LATITUDE]' />
          <map key='[LONGITUDE (airports.csv1)]' value='[airports.csv1].[LONGITUDE]' />
          <map key='[LONGITUDE]' value='[airports.csv].[LONGITUDE]' />
          <map key='[MONTH]' value='[flights.csv].[MONTH]' />
          <map key='[SCHEDULED_ARRIVAL]' value='[flights.csv].[SCHEDULED_ARRIVAL]' />
          <map key='[SCHEDULED_DEPARTURE]' value='[flights.csv].[SCHEDULED_DEPARTURE]' />
          <map key='[SCHEDULED_TIME]' value='[flights.csv].[SCHEDULED_TIME]' />
          <map key='[SECURITY_DELAY]' value='[flights.csv].[SECURITY_DELAY]' />
          <map key='[STATE (airports.csv1)]' value='[airports.csv1].[STATE]' />
          <map key='[STATE]' value='[airports.csv].[STATE]' />
          <map key='[TAIL_NUMBER]' value='[flights.csv].[TAIL_NUMBER]' />
          <map key='[TAXI_IN]' value='[flights.csv].[TAXI_IN]' />
          <map key='[TAXI_OUT]' value='[flights.csv].[TAXI_OUT]' />
          <map key='[Unnamed: 0.1]' value='[flights.csv].[Unnamed: 0.1]' />
          <map key='[Unnamed: 0]' value='[flights.csv].[Unnamed: 0]' />
          <map key='[WEATHER_DELAY]' value='[flights.csv].[WEATHER_DELAY]' />
          <map key='[WHEELS_OFF]' value='[flights.csv].[WHEELS_OFF]' />
          <map key='[WHEELS_ON]' value='[flights.csv].[WHEELS_ON]' />
          <map key='[YEAR]' value='[flights.csv].[YEAR]' />
        </cols>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[airlines.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[airports.csv1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unnamed: 0</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unnamed: 0]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>Unnamed: 0</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unnamed: 0.1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unnamed: 0.1]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>Unnamed: 0.1</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YEAR</remote-name>
            <remote-type>20</remote-type>
            <local-name>[YEAR]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>YEAR</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MONTH</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MONTH]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>MONTH</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DAY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DAY]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DAY</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DAY_OF_WEEK</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DAY_OF_WEEK]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DAY_OF_WEEK</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AIRLINE_CODE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AIRLINE_CODE]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>AIRLINE_CODE</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FLIGHT_NUMBER</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FLIGHT_NUMBER]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>FLIGHT_NUMBER</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TAIL_NUMBER</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TAIL_NUMBER]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>TAIL_NUMBER</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Departure_IATA_CODE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Departure_IATA_CODE]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>Departure_IATA_CODE</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Destination_IATA_CODE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Destination_IATA_CODE]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>Destination_IATA_CODE</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SCHEDULED_DEPARTURE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SCHEDULED_DEPARTURE]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>SCHEDULED_DEPARTURE</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEPARTURE_TIME</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DEPARTURE_TIME]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DEPARTURE_TIME</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEPARTURE_DELAY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DEPARTURE_DELAY]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DEPARTURE_DELAY</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TAXI_OUT</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TAXI_OUT]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>TAXI_OUT</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WHEELS_OFF</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WHEELS_OFF]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>WHEELS_OFF</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SCHEDULED_TIME</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SCHEDULED_TIME]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>SCHEDULED_TIME</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ELAPSED_TIME</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ELAPSED_TIME]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>ELAPSED_TIME</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AIR_TIME</remote-name>
            <remote-type>20</remote-type>
            <local-name>[AIR_TIME]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>AIR_TIME</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DISTANCE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DISTANCE]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DISTANCE</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WHEELS_ON</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WHEELS_ON]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>WHEELS_ON</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TAXI_IN</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TAXI_IN]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>TAXI_IN</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SCHEDULED_ARRIVAL</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SCHEDULED_ARRIVAL]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>SCHEDULED_ARRIVAL</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ARRIVAL_TIME</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ARRIVAL_TIME]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>ARRIVAL_TIME</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ARRIVAL_DELAY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ARRIVAL_DELAY]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>ARRIVAL_DELAY</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DIVERTED</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DIVERTED]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>DIVERTED</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CANCELLED</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CANCELLED]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>CANCELLED</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CANCELLATION_REASON</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CANCELLATION_REASON]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>CANCELLATION_REASON</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AIR_SYSTEM_DELAY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[AIR_SYSTEM_DELAY]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>AIR_SYSTEM_DELAY</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SECURITY_DELAY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SECURITY_DELAY]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>SECURITY_DELAY</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AIRLINE_DELAY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[AIRLINE_DELAY]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>AIRLINE_DELAY</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LATE_AIRCRAFT_DELAY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LATE_AIRCRAFT_DELAY]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>LATE_AIRCRAFT_DELAY</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WEATHER_DELAY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WEATHER_DELAY]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>WEATHER_DELAY</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airline_CODE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Airline_CODE]</local-name>
            <parent-name>[airlines.csv]</parent-name>
            <remote-alias>Airline_CODE</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AIRLINE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AIRLINE]</local-name>
            <parent-name>[airlines.csv]</parent-name>
            <remote-alias>AIRLINE</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IATA_CODE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[IATA_CODE]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>IATA_CODE</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AIRPORT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AIRPORT]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>AIRPORT</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CITY]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>CITY</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATE]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>STATE</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTRY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTRY]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>COUNTRY</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LATITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LATITUDE]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>LATITUDE</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LONGITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LONGITUDE]</local-name>
            <parent-name>[airports.csv]</parent-name>
            <remote-alias>LONGITUDE</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IATA_CODE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[IATA_CODE (airports.csv1)]</local-name>
            <parent-name>[airports.csv1]</parent-name>
            <remote-alias>IATA_CODE</remote-alias>
            <ordinal>43</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AIRPORT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AIRPORT (airports.csv1)]</local-name>
            <parent-name>[airports.csv1]</parent-name>
            <remote-alias>AIRPORT</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CITY (airports.csv1)]</local-name>
            <parent-name>[airports.csv1]</parent-name>
            <remote-alias>CITY</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATE (airports.csv1)]</local-name>
            <parent-name>[airports.csv1]</parent-name>
            <remote-alias>STATE</remote-alias>
            <ordinal>46</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTRY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTRY (airports.csv1)]</local-name>
            <parent-name>[airports.csv1]</parent-name>
            <remote-alias>COUNTRY</remote-alias>
            <ordinal>47</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LATITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LATITUDE (airports.csv1)]</local-name>
            <parent-name>[airports.csv1]</parent-name>
            <remote-alias>LATITUDE</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LONGITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LONGITUDE (airports.csv1)]</local-name>
            <parent-name>[airports.csv1]</parent-name>
            <remote-alias>LONGITUDE</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Airline' datatype='string' name='[AIRLINE]' role='dimension' type='nominal' />
      <column caption='Airline Code' datatype='string' name='[AIRLINE_CODE]' role='dimension' type='nominal' />
      <column caption='Airline Delay' datatype='integer' name='[AIRLINE_DELAY]' role='measure' type='quantitative' />
      <column caption='Airport' datatype='string' name='[AIRPORT]' role='dimension' type='nominal' />
      <column caption='Air System Delay' datatype='integer' name='[AIR_SYSTEM_DELAY]' role='measure' type='quantitative' />
      <column caption='Air Time' datatype='integer' name='[AIR_TIME]' role='measure' type='quantitative' />
      <column caption='Arrival Delay' datatype='integer' name='[ARRIVAL_DELAY]' role='measure' type='quantitative' />
      <column caption='Arrival Time' datatype='integer' name='[ARRIVAL_TIME]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[Airline Delay (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='1' formula='[AIRLINE_DELAY]' peg='0' size='55' />
      </column>
      <column caption='Airline CODE' datatype='string' hidden='true' name='[Airline_CODE]' role='dimension' type='nominal' />
      <column caption='Cancellation Reason' datatype='string' name='[CANCELLATION_REASON]' role='dimension' type='nominal' />
      <column caption='Cancelled' datatype='integer' name='[CANCELLED]' role='measure' type='quantitative' />
      <column caption='Destination_CITY (airports.csv1)' datatype='string' name='[CITY (airports.csv1)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Departure_City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[COUNTRY (airports.csv1)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Depart to Destination' datatype='string' name='[Calculation_1137721913153531905]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[CITY] + &quot; to &quot; + [CITY (airports.csv1)]' />
      </column>
      <column caption='Weather Delay Count' datatype='integer' name='[Calculation_1137721913216823299]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [WEATHER_DELAY] &gt; 0 THEN 1 ELSE 0 END' />
      </column>
      <column caption='Total Delay Count' datatype='integer' name='[Calculation_1137721913218289672]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Weather Delay Count (copy)_1137721913217421316])+SUM([Weather Delay Count (copy) (copy)_1137721913217433605])+SUM([Weather Delay Count (copy) (copy) (copy)_1137721913217441798])+SUM([Weather Delay Count (copy)_1137721913217822727])+SUM([Calculation_1137721913216823299])' />
      </column>
      <column caption='Air System Delay Percent' datatype='real' name='[Calculation_1137721913232375835]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Weather Delay Count (copy)_1137721913217421316])/[Calculation_1137721913218289672]' />
      </column>
      <column datatype='integer' name='[DAY]' role='dimension' type='quantitative' />
      <column caption='Day Of Week' datatype='integer' name='[DAY_OF_WEEK]' role='dimension' type='quantitative' />
      <column caption='Departure Delay' datatype='integer' name='[DEPARTURE_DELAY]' role='measure' type='quantitative' />
      <column caption='Departure Time' datatype='integer' name='[DEPARTURE_TIME]' role='measure' type='quantitative' />
      <column caption='Distance' datatype='integer' name='[DISTANCE]' role='measure' type='quantitative' />
      <column caption='Diverted' datatype='integer' name='[DIVERTED]' role='measure' type='quantitative' />
      <column caption='Departure IATA CODE' datatype='string' name='[Departure_IATA_CODE]' role='dimension' type='nominal' />
      <column caption='Destination IATA CODE' datatype='string' name='[Destination_IATA_CODE]' role='dimension' type='nominal' />
      <column caption='Elapsed Time' datatype='integer' name='[ELAPSED_TIME]' role='measure' type='quantitative' />
      <column datatype='integer' name='[F1]' role='measure' type='quantitative' />
      <column caption='Flight Number' datatype='integer' name='[FLIGHT_NUMBER]' role='dimension' type='ordinal' />
      <column caption='IATA CODE (airports.csv1)' datatype='string' name='[IATA_CODE (airports.csv1)]' role='dimension' type='nominal' />
      <column caption='Iata Code' datatype='string' name='[IATA_CODE]' role='dimension' type='nominal' />
      <column caption='Late Aircraft Delay' datatype='integer' name='[LATE_AIRCRAFT_DELAY]' role='measure' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[LATITUDE (airports.csv1)]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[LONGITUDE (airports.csv1)]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Month' datatype='integer' name='[MONTH]' role='dimension' type='quantitative' />
      <column caption='Scheduled Arrival' datatype='integer' name='[SCHEDULED_ARRIVAL]' role='measure' type='quantitative' />
      <column caption='Scheduled Departure' datatype='integer' name='[SCHEDULED_DEPARTURE]' role='measure' type='quantitative' />
      <column caption='Scheduled Time' datatype='integer' name='[SCHEDULED_TIME]' role='measure' type='quantitative' />
      <column caption='Security Delay' datatype='integer' name='[SECURITY_DELAY]' role='measure' type='quantitative' />
      <column datatype='string' name='[STATE (airports.csv1)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Tail Number' datatype='string' name='[TAIL_NUMBER]' role='dimension' type='nominal' />
      <column caption='Taxi In' datatype='integer' name='[TAXI_IN]' role='measure' type='quantitative' />
      <column caption='Taxi Out' datatype='integer' name='[TAXI_OUT]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Unnamed: 0.1]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Unnamed: 0]' role='measure' type='quantitative' />
      <column caption='Weather Delay' datatype='integer' name='[WEATHER_DELAY]' role='measure' type='quantitative' />
      <column caption='Wheels Off' datatype='integer' name='[WHEELS_OFF]' role='measure' type='quantitative' />
      <column caption='Wheels On' datatype='integer' name='[WHEELS_ON]' role='measure' type='quantitative' />
      <column caption='Late Aircraf Delay Count' datatype='integer' name='[Weather Delay Count (copy) (copy) (copy)_1137721913217441798]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [LATE_AIRCRAFT_DELAY] &gt; 0 THEN 1 ELSE 0 END' />
      </column>
      <column caption='Airline Delay Count' datatype='integer' name='[Weather Delay Count (copy) (copy)_1137721913217433605]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [AIRLINE_DELAY] &gt; 0 THEN 1 ELSE 0 END' />
      </column>
      <column caption='Air System Delay Count' datatype='integer' name='[Weather Delay Count (copy)_1137721913217421316]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [AIR_SYSTEM_DELAY] &gt; 0 THEN 1 ELSE 0 END' />
      </column>
      <column caption='Security Delay Count' datatype='integer' name='[Weather Delay Count (copy)_1137721913217822727]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [SECURITY_DELAY] &gt; 0 THEN 1 ELSE 0 END' />
      </column>
      <column caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='flights.csv' datatype='table' name='[__tableau_internal_object_id__].[flights.csv_1B912AF30B394F37934237C63A16A53D]' role='measure' type='quantitative' />
      <column caption='Late Aircraft Delay Percent' datatype='real' name='[airsystem_delay_precen (copy) (copy)_1137721913232887837]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Weather Delay Count (copy) (copy) (copy)_1137721913217441798])/[Calculation_1137721913218289672]' />
      </column>
      <column caption='Airline Delay Percent' datatype='real' name='[airsystem_delay_precen (copy)_1137721913232879644]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Weather Delay Count (copy) (copy)_1137721913217433605])/[Calculation_1137721913218289672]' />
      </column>
      <column caption='Weather Delay Percent' datatype='real' name='[lateAircraft_delay_percent (copy) (copy)_1137721913233379359]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_1137721913216823299])/[Calculation_1137721913218289672]' />
      </column>
      <column caption='Security Delay Percent' datatype='real' name='[lateAircraft_delay_percent (copy)_1137721913233371166]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Weather Delay Count (copy)_1137721913217822727])/[Calculation_1137721913218289672]' />
      </column>
      <column-instance column='[__tableau_internal_object_id__].[flights.csv_1B912AF30B394F37934237C63A16A53D]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:flights.csv_1B912AF30B394F37934237C63A16A53D:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ARRIVAL_DELAY]' derivation='Avg' name='[avg:ARRIVAL_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DEPARTURE_DELAY]' derivation='Avg' name='[avg:DEPARTURE_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LATITUDE (airports.csv1)]' derivation='Avg' name='[avg:LATITUDE (airports.csv1):qk]' pivot='key' type='quantitative' />
      <column-instance column='[LATITUDE]' derivation='Avg' name='[avg:LATITUDE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LONGITUDE (airports.csv1)]' derivation='Avg' name='[avg:LONGITUDE (airports.csv1):qk]' pivot='key' type='quantitative' />
      <column-instance column='[LONGITUDE]' derivation='Avg' name='[avg:LONGITUDE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Weather Delay Count (copy)_1137721913217421316]' derivation='Sum' name='[diff:sum:Weather Delay Count (copy)_1137721913217421316:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[AIRLINE]' derivation='None' name='[none:AIRLINE:nk]' pivot='key' type='nominal' />
      <column-instance column='[AIRPORT]' derivation='None' name='[none:AIRPORT:nk]' pivot='key' type='nominal' />
      <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
      <column-instance column='[Weather Delay Count (copy)_1137721913217421316]' derivation='Sum' name='[pcdf:sum:Weather Delay Count (copy)_1137721913217421316:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='CellInPane' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[AIRLINE_DELAY]' derivation='Sum' name='[pcto:sum:AIRLINE_DELAY:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRLINE:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[AIR_SYSTEM_DELAY]' derivation='Sum' name='[pcto:sum:AIR_SYSTEM_DELAY:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRLINE:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[AIR_SYSTEM_DELAY]' derivation='Sum' name='[pcto:sum:AIR_SYSTEM_DELAY:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1137721913216823299]' derivation='Sum' name='[pcto:sum:Calculation_1137721913216823299:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[LATE_AIRCRAFT_DELAY]' derivation='Sum' name='[pcto:sum:LATE_AIRCRAFT_DELAY:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRLINE:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[SECURITY_DELAY]' derivation='Sum' name='[pcto:sum:SECURITY_DELAY:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRLINE:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[WEATHER_DELAY]' derivation='Sum' name='[pcto:sum:WEATHER_DELAY:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRLINE:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Weather Delay Count (copy) (copy) (copy)_1137721913217441798]' derivation='Sum' name='[pcto:sum:Weather Delay Count (copy) (copy) (copy)_1137721913217441798:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[AIRLINE]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Weather Delay Count (copy) (copy) (copy)_1137721913217441798]' derivation='Sum' name='[pcto:sum:Weather Delay Count (copy) (copy) (copy)_1137721913217441798:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Weather Delay Count (copy) (copy) (copy)_1137721913217441798]' derivation='Sum' name='[pcto:sum:Weather Delay Count (copy) (copy) (copy)_1137721913217441798:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Weather Delay Count (copy) (copy) (copy)_1137721913217441798]' derivation='Sum' name='[pcto:sum:Weather Delay Count (copy) (copy) (copy)_1137721913217441798:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Table' type='PctTotal' />
      </column-instance>
      <column-instance column='[Weather Delay Count (copy) (copy) (copy)_1137721913217441798]' derivation='Sum' name='[pcto:sum:Weather Delay Count (copy) (copy) (copy)_1137721913217441798:qk:6]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[Weather Delay Count (copy) (copy) (copy)_1137721913217441798]' derivation='Sum' name='[pcto:sum:Weather Delay Count (copy) (copy) (copy)_1137721913217441798:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Weather Delay Count (copy) (copy)_1137721913217433605]' derivation='Sum' name='[pcto:sum:Weather Delay Count (copy) (copy)_1137721913217433605:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Weather Delay Count (copy) (copy)_1137721913217433605]' derivation='Sum' name='[pcto:sum:Weather Delay Count (copy) (copy)_1137721913217433605:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Weather Delay Count (copy)_1137721913217421316]' derivation='Sum' name='[pcto:sum:Weather Delay Count (copy)_1137721913217421316:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRLINE:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Weather Delay Count (copy)_1137721913217421316]' derivation='Sum' name='[pcto:sum:Weather Delay Count (copy)_1137721913217421316:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Weather Delay Count (copy)_1137721913217421316]' derivation='Sum' name='[pcto:sum:Weather Delay Count (copy)_1137721913217421316:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[Weather Delay Count (copy)_1137721913217421316]' derivation='Sum' name='[pcto:sum:Weather Delay Count (copy)_1137721913217421316:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Table' type='PctTotal' />
      </column-instance>
      <column-instance column='[Weather Delay Count (copy)_1137721913217421316]' derivation='Sum' name='[pcto:sum:Weather Delay Count (copy)_1137721913217421316:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Weather Delay Count (copy)_1137721913217822727]' derivation='Sum' name='[pcto:sum:Weather Delay Count (copy)_1137721913217822727:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Weather Delay Count (copy) (copy) (copy)_1137721913217441798]' derivation='Sum' name='[pcva:sum:Weather Delay Count (copy) (copy) (copy)_1137721913217441798:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRLINE:nk]' ordering-type='Field' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Weather Delay Count (copy) (copy) (copy)_1137721913217441798]' derivation='Sum' name='[pcva:sum:Weather Delay Count (copy) (copy) (copy)_1137721913217441798:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='' ordering-type='Field' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Weather Delay Count (copy) (copy) (copy)_1137721913217441798]' derivation='Sum' name='[pcva:sum:Weather Delay Count (copy) (copy) (copy)_1137721913217441798:qk:3]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[AIRLINE]' ordering-type='Field' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Weather Delay Count (copy) (copy) (copy)_1137721913217441798]' derivation='Sum' name='[pcva:sum:Weather Delay Count (copy) (copy) (copy)_1137721913217441798:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Weather Delay Count (copy)_1137721913217421316]' derivation='Sum' name='[pcva:sum:Weather Delay Count (copy)_1137721913217421316:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='CellInPane' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Weather Delay Count (copy)_1137721913217421316]' derivation='Sum' name='[pcva:sum:Weather Delay Count (copy)_1137721913217421316:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[AIRLINE_DELAY]' derivation='Sum' name='[sum:AIRLINE_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AIR_SYSTEM_DELAY]' derivation='Sum' name='[sum:AIR_SYSTEM_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AIR_TIME]' derivation='Sum' name='[sum:AIR_TIME:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ARRIVAL_DELAY]' derivation='Sum' name='[sum:ARRIVAL_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ARRIVAL_TIME]' derivation='Sum' name='[sum:ARRIVAL_TIME:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CANCELLED]' derivation='Sum' name='[sum:CANCELLED:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1137721913216823299]' derivation='Sum' name='[sum:Calculation_1137721913216823299:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DEPARTURE_DELAY]' derivation='Sum' name='[sum:DEPARTURE_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DEPARTURE_TIME]' derivation='Sum' name='[sum:DEPARTURE_TIME:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DISTANCE]' derivation='Sum' name='[sum:DISTANCE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DIVERTED]' derivation='Sum' name='[sum:DIVERTED:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ELAPSED_TIME]' derivation='Sum' name='[sum:ELAPSED_TIME:qk]' pivot='key' type='quantitative' />
      <column-instance column='[F1]' derivation='Sum' name='[sum:F1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LATE_AIRCRAFT_DELAY]' derivation='Sum' name='[sum:LATE_AIRCRAFT_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SCHEDULED_ARRIVAL]' derivation='Sum' name='[sum:SCHEDULED_ARRIVAL:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SCHEDULED_DEPARTURE]' derivation='Sum' name='[sum:SCHEDULED_DEPARTURE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SCHEDULED_TIME]' derivation='Sum' name='[sum:SCHEDULED_TIME:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SECURITY_DELAY]' derivation='Sum' name='[sum:SECURITY_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TAXI_IN]' derivation='Sum' name='[sum:TAXI_IN:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TAXI_OUT]' derivation='Sum' name='[sum:TAXI_OUT:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Unnamed: 0.1]' derivation='Sum' name='[sum:Unnamed: 0.1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Unnamed: 0]' derivation='Sum' name='[sum:Unnamed: 0:qk]' pivot='key' type='quantitative' />
      <column-instance column='[WEATHER_DELAY]' derivation='Sum' name='[sum:WEATHER_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[WHEELS_OFF]' derivation='Sum' name='[sum:WHEELS_OFF:qk]' pivot='key' type='quantitative' />
      <column-instance column='[WHEELS_ON]' derivation='Sum' name='[sum:WHEELS_ON:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Weather Delay Count (copy) (copy) (copy)_1137721913217441798]' derivation='Sum' name='[sum:Weather Delay Count (copy) (copy) (copy)_1137721913217441798:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Weather Delay Count (copy) (copy)_1137721913217433605]' derivation='Sum' name='[sum:Weather Delay Count (copy) (copy)_1137721913217433605:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Weather Delay Count (copy)_1137721913217421316]' derivation='Sum' name='[sum:Weather Delay Count (copy)_1137721913217421316:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Weather Delay Count (copy)_1137721913217822727]' derivation='Sum' name='[sum:Weather Delay Count (copy)_1137721913217822727:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1137721913218289672]' derivation='User' name='[usr:Calculation_1137721913218289672:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1137721913232375835]' derivation='User' name='[usr:Calculation_1137721913232375835:qk]' pivot='key' type='quantitative' />
      <column-instance column='[airsystem_delay_precen (copy) (copy)_1137721913232887837]' derivation='User' name='[usr:airsystem_delay_precen (copy) (copy)_1137721913232887837:qk]' pivot='key' type='quantitative' />
      <column-instance column='[airsystem_delay_precen (copy)_1137721913232879644]' derivation='User' name='[usr:airsystem_delay_precen (copy)_1137721913232879644:qk]' pivot='key' type='quantitative' />
      <column-instance column='[lateAircraft_delay_percent (copy) (copy)_1137721913233379359]' derivation='User' name='[usr:lateAircraft_delay_percent (copy) (copy)_1137721913233379359:qk]' pivot='key' type='quantitative' />
      <column-instance column='[lateAircraft_delay_percent (copy)_1137721913233371166]' derivation='User' name='[usr:lateAircraft_delay_percent (copy)_1137721913233371166:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Airline)' hidden='true' name='[Action (Airline)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[AIRLINE]' />
        </groupfilter>
      </group>
      <group caption='Action (Airport)' hidden='true' name='[Action (Airport)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[AIRPORT]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[STATE]' />
        </groupfilter>
      </group>
      <group caption='Airline Set' name='[Airline Set]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='member' level='[AIRLINE]' member='&quot;Southwest Airlines Co.&quot;' />
      </group>
      <drill-paths>
        <drill-path name='State with Airport and Airline'>
          <field>[STATE]</field>
          <field>[AIRPORT]</field>
          <field>[AIRLINE]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/lyttonliang/Desktop/Accelerator/WGU_Fall2023/Data_Visualization/Project/Flight Delays and Cancellations/flights.csv+ (Multiple Connections).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='08/11/2023 05:35:10 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[AIRLINE]' value='[Extract].[AIRLINE]' />
            <map key='[AIRLINE_CODE]' value='[Extract].[AIRLINE_CODE]' />
            <map key='[AIRLINE_DELAY]' value='[Extract].[AIRLINE_DELAY]' />
            <map key='[AIRPORT (airports.csv1)]' value='[Extract].[AIRPORT]' />
            <map key='[AIRPORT]' value='[Extract].[AIRPORT1]' />
            <map key='[AIR_SYSTEM_DELAY]' value='[Extract].[AIR_SYSTEM_DELAY]' />
            <map key='[AIR_TIME]' value='[Extract].[AIR_TIME]' />
            <map key='[ARRIVAL_DELAY]' value='[Extract].[ARRIVAL_DELAY]' />
            <map key='[ARRIVAL_TIME]' value='[Extract].[ARRIVAL_TIME]' />
            <map key='[CANCELLATION_REASON]' value='[Extract].[CANCELLATION_REASON]' />
            <map key='[CANCELLED]' value='[Extract].[CANCELLED]' />
            <map key='[CITY (airports.csv1)]' value='[Extract].[CITY]' />
            <map key='[CITY]' value='[Extract].[CITY1]' />
            <map key='[COUNTRY (airports.csv1)]' value='[Extract].[COUNTRY]' />
            <map key='[COUNTRY]' value='[Extract].[COUNTRY1]' />
            <map key='[DAY]' value='[Extract].[DAY]' />
            <map key='[DAY_OF_WEEK]' value='[Extract].[DAY_OF_WEEK]' />
            <map key='[DEPARTURE_DELAY]' value='[Extract].[DEPARTURE_DELAY]' />
            <map key='[DEPARTURE_TIME]' value='[Extract].[DEPARTURE_TIME]' />
            <map key='[DISTANCE]' value='[Extract].[DISTANCE]' />
            <map key='[DIVERTED]' value='[Extract].[DIVERTED]' />
            <map key='[Departure_IATA_CODE]' value='[Extract].[Departure_IATA_CODE]' />
            <map key='[Destination_IATA_CODE]' value='[Extract].[Destination_IATA_CODE]' />
            <map key='[ELAPSED_TIME]' value='[Extract].[ELAPSED_TIME]' />
            <map key='[F1]' value='[Extract].[F1]' />
            <map key='[FLIGHT_NUMBER]' value='[Extract].[FLIGHT_NUMBER]' />
            <map key='[IATA_CODE (airports.csv1)]' value='[Extract].[IATA_CODE]' />
            <map key='[IATA_CODE]' value='[Extract].[IATA_CODE1]' />
            <map key='[LATE_AIRCRAFT_DELAY]' value='[Extract].[LATE_AIRCRAFT_DELAY]' />
            <map key='[LATITUDE (airports.csv1)]' value='[Extract].[LATITUDE]' />
            <map key='[LATITUDE]' value='[Extract].[LATITUDE1]' />
            <map key='[LONGITUDE (airports.csv1)]' value='[Extract].[LONGITUDE]' />
            <map key='[LONGITUDE]' value='[Extract].[LONGITUDE1]' />
            <map key='[MONTH]' value='[Extract].[MONTH]' />
            <map key='[SCHEDULED_ARRIVAL]' value='[Extract].[SCHEDULED_ARRIVAL]' />
            <map key='[SCHEDULED_DEPARTURE]' value='[Extract].[SCHEDULED_DEPARTURE]' />
            <map key='[SCHEDULED_TIME]' value='[Extract].[SCHEDULED_TIME]' />
            <map key='[SECURITY_DELAY]' value='[Extract].[SECURITY_DELAY]' />
            <map key='[STATE (airports.csv1)]' value='[Extract].[STATE]' />
            <map key='[STATE]' value='[Extract].[STATE1]' />
            <map key='[TAIL_NUMBER]' value='[Extract].[TAIL_NUMBER]' />
            <map key='[TAXI_IN]' value='[Extract].[TAXI_IN]' />
            <map key='[TAXI_OUT]' value='[Extract].[TAXI_OUT]' />
            <map key='[Unnamed: 0.1]' value='[Extract].[Unnamed: 0.1]' />
            <map key='[Unnamed: 0]' value='[Extract].[Unnamed: 0]' />
            <map key='[WEATHER_DELAY]' value='[Extract].[WEATHER_DELAY]' />
            <map key='[WHEELS_OFF]' value='[Extract].[WHEELS_OFF]' />
            <map key='[WHEELS_ON]' value='[Extract].[WHEELS_ON]' />
            <map key='[YEAR]' value='[Extract].[YEAR]' />
          </cols>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='flights.csv+ (Multiple Connections)' increment-value='%null%' refresh-type='create' rows-inserted='274964' timestamp-start='2023-08-11 17:35:09.032' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>274964</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Unnamed: 0</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Unnamed: 0]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Unnamed: 0</remote-alias>
              <ordinal>1</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>274964</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Unnamed: 0.1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Unnamed: 0.1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Unnamed: 0.1</remote-alias>
              <ordinal>2</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>274964</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>YEAR</remote-name>
              <remote-type>20</remote-type>
              <local-name>[YEAR]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>YEAR</remote-alias>
              <ordinal>3</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>MONTH</remote-name>
              <remote-type>20</remote-type>
              <local-name>[MONTH]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>MONTH</remote-alias>
              <ordinal>4</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DAY</remote-name>
              <remote-type>20</remote-type>
              <local-name>[DAY]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DAY</remote-alias>
              <ordinal>5</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>31</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DAY_OF_WEEK</remote-name>
              <remote-type>20</remote-type>
              <local-name>[DAY_OF_WEEK]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DAY_OF_WEEK</remote-alias>
              <ordinal>6</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AIRLINE_CODE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[AIRLINE_CODE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AIRLINE_CODE</remote-alias>
              <ordinal>7</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>FLIGHT_NUMBER</remote-name>
              <remote-type>20</remote-type>
              <local-name>[FLIGHT_NUMBER]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FLIGHT_NUMBER</remote-alias>
              <ordinal>8</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>27016</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TAIL_NUMBER</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TAIL_NUMBER]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TAIL_NUMBER</remote-alias>
              <ordinal>9</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>24545</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Departure_IATA_CODE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Departure_IATA_CODE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Departure_IATA_CODE</remote-alias>
              <ordinal>10</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>909</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Destination_IATA_CODE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Destination_IATA_CODE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Destination_IATA_CODE</remote-alias>
              <ordinal>11</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1103</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SCHEDULED_DEPARTURE</remote-name>
              <remote-type>20</remote-type>
              <local-name>[SCHEDULED_DEPARTURE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SCHEDULED_DEPARTURE</remote-alias>
              <ordinal>12</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3463</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DEPARTURE_TIME</remote-name>
              <remote-type>20</remote-type>
              <local-name>[DEPARTURE_TIME]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DEPARTURE_TIME</remote-alias>
              <ordinal>13</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5661</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DEPARTURE_DELAY</remote-name>
              <remote-type>20</remote-type>
              <local-name>[DEPARTURE_DELAY]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DEPARTURE_DELAY</remote-alias>
              <ordinal>14</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>713</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TAXI_OUT</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TAXI_OUT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TAXI_OUT</remote-alias>
              <ordinal>15</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>192</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>WHEELS_OFF</remote-name>
              <remote-type>20</remote-type>
              <local-name>[WHEELS_OFF]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>WHEELS_OFF</remote-alias>
              <ordinal>16</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5662</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SCHEDULED_TIME</remote-name>
              <remote-type>20</remote-type>
              <local-name>[SCHEDULED_TIME]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SCHEDULED_TIME</remote-alias>
              <ordinal>17</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1210</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ELAPSED_TIME</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ELAPSED_TIME]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ELAPSED_TIME</remote-alias>
              <ordinal>18</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1069</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AIR_TIME</remote-name>
              <remote-type>20</remote-type>
              <local-name>[AIR_TIME]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AIR_TIME</remote-alias>
              <ordinal>19</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1024</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DISTANCE</remote-name>
              <remote-type>20</remote-type>
              <local-name>[DISTANCE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DISTANCE</remote-alias>
              <ordinal>20</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4326</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>WHEELS_ON</remote-name>
              <remote-type>20</remote-type>
              <local-name>[WHEELS_ON]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>WHEELS_ON</remote-alias>
              <ordinal>21</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6302</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TAXI_IN</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TAXI_IN]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TAXI_IN</remote-alias>
              <ordinal>22</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>134</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SCHEDULED_ARRIVAL</remote-name>
              <remote-type>20</remote-type>
              <local-name>[SCHEDULED_ARRIVAL]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SCHEDULED_ARRIVAL</remote-alias>
              <ordinal>23</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5462</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ARRIVAL_TIME</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ARRIVAL_TIME]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ARRIVAL_TIME</remote-alias>
              <ordinal>24</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6026</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ARRIVAL_DELAY</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ARRIVAL_DELAY]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ARRIVAL_DELAY</remote-alias>
              <ordinal>25</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>820</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DIVERTED</remote-name>
              <remote-type>20</remote-type>
              <local-name>[DIVERTED]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DIVERTED</remote-alias>
              <ordinal>26</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CANCELLED</remote-name>
              <remote-type>20</remote-type>
              <local-name>[CANCELLED]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CANCELLED</remote-alias>
              <ordinal>27</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CANCELLATION_REASON</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CANCELLATION_REASON]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CANCELLATION_REASON</remote-alias>
              <ordinal>28</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AIR_SYSTEM_DELAY</remote-name>
              <remote-type>20</remote-type>
              <local-name>[AIR_SYSTEM_DELAY]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AIR_SYSTEM_DELAY</remote-alias>
              <ordinal>29</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>363</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SECURITY_DELAY</remote-name>
              <remote-type>20</remote-type>
              <local-name>[SECURITY_DELAY]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SECURITY_DELAY</remote-alias>
              <ordinal>30</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AIRLINE_DELAY</remote-name>
              <remote-type>20</remote-type>
              <local-name>[AIRLINE_DELAY]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AIRLINE_DELAY</remote-alias>
              <ordinal>31</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>374</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LATE_AIRCRAFT_DELAY</remote-name>
              <remote-type>20</remote-type>
              <local-name>[LATE_AIRCRAFT_DELAY]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LATE_AIRCRAFT_DELAY</remote-alias>
              <ordinal>32</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>532</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>WEATHER_DELAY</remote-name>
              <remote-type>20</remote-type>
              <local-name>[WEATHER_DELAY]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>WEATHER_DELAY</remote-alias>
              <ordinal>33</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>258</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AIRLINE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[AIRLINE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AIRLINE</remote-alias>
              <ordinal>34</ordinal>
              <family>airlines.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>IATA_CODE1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[IATA_CODE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>IATA_CODE1</remote-alias>
              <ordinal>35</ordinal>
              <family>airports.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>909</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AIRPORT1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[AIRPORT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AIRPORT1</remote-alias>
              <ordinal>36</ordinal>
              <family>airports.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>909</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CITY1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CITY]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CITY1</remote-alias>
              <ordinal>37</ordinal>
              <family>airports.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>908</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>STATE1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[STATE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>STATE1</remote-alias>
              <ordinal>38</ordinal>
              <family>airports.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>82</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>COUNTRY1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[COUNTRY]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>COUNTRY1</remote-alias>
              <ordinal>39</ordinal>
              <family>airports.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LATITUDE1</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LATITUDE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LATITUDE1</remote-alias>
              <ordinal>40</ordinal>
              <family>airports.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>909</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LONGITUDE1</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LONGITUDE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LONGITUDE1</remote-alias>
              <ordinal>41</ordinal>
              <family>airports.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>909</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>IATA_CODE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[IATA_CODE (airports.csv1)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>IATA_CODE</remote-alias>
              <ordinal>42</ordinal>
              <family>airports.csv1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1103</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AIRPORT</remote-name>
              <remote-type>129</remote-type>
              <local-name>[AIRPORT (airports.csv1)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AIRPORT</remote-alias>
              <ordinal>43</ordinal>
              <family>airports.csv1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1103</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CITY</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CITY (airports.csv1)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CITY</remote-alias>
              <ordinal>44</ordinal>
              <family>airports.csv1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1088</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>STATE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[STATE (airports.csv1)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>STATE</remote-alias>
              <ordinal>45</ordinal>
              <family>airports.csv1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>84</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>COUNTRY</remote-name>
              <remote-type>129</remote-type>
              <local-name>[COUNTRY (airports.csv1)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>COUNTRY</remote-alias>
              <ordinal>46</ordinal>
              <family>airports.csv1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LATITUDE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LATITUDE (airports.csv1)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LATITUDE</remote-alias>
              <ordinal>47</ordinal>
              <family>airports.csv1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1103</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LONGITUDE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LONGITUDE (airports.csv1)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LONGITUDE</remote-alias>
              <ordinal>48</ordinal>
              <family>airports.csv1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1103</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights.csv_1B912AF30B394F37934237C63A16A53D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:COUNTRY:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AIRLINE:nk]' palette='blue_teal_10_0' type='palette'>
            <map to='#2c5985'>
              <bucket>&quot;Virgin America&quot;</bucket>
            </map>
            <map to='#2e638d'>
              <bucket>&quot;US Airways Inc.&quot;</bucket>
            </map>
            <map to='#306e96'>
              <bucket>&quot;United Air Lines Inc.&quot;</bucket>
            </map>
            <map to='#337a9e'>
              <bucket>&quot;Spirit Air Lines&quot;</bucket>
            </map>
            <map to='#3485a6'>
              <bucket>&quot;Southwest Airlines Co.&quot;</bucket>
            </map>
            <map to='#3790ae'>
              <bucket>&quot;Skywest Airlines Inc.&quot;</bucket>
            </map>
            <map to='#409cb5'>
              <bucket>&quot;JetBlue Airways&quot;</bucket>
            </map>
            <map to='#4ea7bb'>
              <bucket>&quot;Hawaiian Airlines Inc.&quot;</bucket>
            </map>
            <map to='#62b1c1'>
              <bucket>&quot;Frontier Airlines Inc.&quot;</bucket>
            </map>
            <map to='#74bbc6'>
              <bucket>&quot;Delta Air Lines Inc.&quot;</bucket>
            </map>
            <map to='#85c5cb'>
              <bucket>&quot;Atlantic Southeast Airlines&quot;</bucket>
            </map>
            <map to='#96cfcf'>
              <bucket>&quot;American Eagle Airlines Inc.&quot;</bucket>
            </map>
            <map to='#a8d9d3'>
              <bucket>&quot;American Airlines Inc.&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;Alaska Airlines Inc.&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' palette='blue_teal_10_0' type='palette'>
            <map to='#2c5985'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[pcto:sum:Calculation_1137721913216823299:qk]&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:Weather Delay Count (copy)_1137721913217822727:qk]&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:WEATHER_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[usr:airsystem_delay_precen (copy) (copy)_1137721913232887837:qk]&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[usr:Calculation_1137721913232269338:qk]&quot;</bucket>
            </map>
            <map to='#317298'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:LONGITUDE (airports.csv1):qk]&quot;</bucket>
            </map>
            <map to='#32769b'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:LATITUDE (airports.csv1):qk]&quot;</bucket>
            </map>
            <map to='#337a9e'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:LONGITUDE:qk]&quot;</bucket>
            </map>
            <map to='#347da0'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:LATITUDE:qk]&quot;</bucket>
            </map>
            <map to='#347da0'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[pcto:sum:Weather Delay Count (copy)_1137721913217822727:qk]&quot;</bucket>
            </map>
            <map to='#347da0'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:Calculation_1137721913216823299:qk]&quot;</bucket>
            </map>
            <map to='#347da0'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:SECURITY_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#347da0'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[usr:lateAircraft_delay_percent (copy)_1137721913233371166:qk]&quot;</bucket>
            </map>
            <map to='#3a94b1'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:CANCELLED:qk]&quot;</bucket>
            </map>
            <map to='#3d98b3'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:DIVERTED:qk]&quot;</bucket>
            </map>
            <map to='#43a0b7'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:ARRIVAL_TIME:qk]&quot;</bucket>
            </map>
            <map to='#45a2b9'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg]&quot;</bucket>
            </map>
            <map to='#45a2b9'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:LATE_AIRCRAFT_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#45a2b9'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:Weather Delay Count (copy)_1137721913217421316:qk]&quot;</bucket>
            </map>
            <map to='#45a2b9'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[usr:lateAircraft_delay_percent (copy) (copy)_1137721913233379359:qk]&quot;</bucket>
            </map>
            <map to='#48a3b9'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:SCHEDULED_ARRIVAL:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:ARRIVAL_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[diff:sum:Weather Delay Count (copy)_1137721913217421316:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRPORT:nk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[pcdf:sum:Weather Delay Count (copy)_1137721913217421316:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[pcto:sum:AIR_SYSTEM_DELAY:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[pcto:sum:Weather Delay Count (copy)_1137721913217421316:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[pcto:sum:Weather Delay Count (copy)_1137721913217421316:qk:3]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[pcto:sum:Weather Delay Count (copy)_1137721913217421316:qk:4]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[pcto:sum:Weather Delay Count (copy)_1137721913217421316:qk:5]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[pcto:sum:Weather Delay Count (copy)_1137721913217421316:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[pcva:sum:Weather Delay Count (copy)_1137721913217421316:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[pcva:sum:Weather Delay Count (copy)_1137721913217421316:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:ARRIVAL_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#4ea7bb'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:TAXI_IN:qk]&quot;</bucket>
            </map>
            <map to='#55aabd'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:WHEELS_ON:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRLINE:nk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[pcto:sum:LATE_AIRCRAFT_DELAY:qk:1]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[usr:Calculation_1137721913218289672:qk]&quot;</bucket>
            </map>
            <map to='#5baebf'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:DISTANCE:qk]&quot;</bucket>
            </map>
            <map to='#62b1c1'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:AIR_TIME:qk]&quot;</bucket>
            </map>
            <map to='#68b5c3'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:ELAPSED_TIME:qk]&quot;</bucket>
            </map>
            <map to='#6eb8c5'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:SCHEDULED_TIME:qk]&quot;</bucket>
            </map>
            <map to='#74bbc6'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:WHEELS_OFF:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[pcto:sum:AIRLINE_DELAY:qk:1]&quot;</bucket>
            </map>
            <map to='#79bec8'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:TAXI_OUT:qk]&quot;</bucket>
            </map>
            <map to='#81c3cb'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[pcto:sum:Weather Delay Count (copy) (copy)_1137721913217433605:qk:1]&quot;</bucket>
            </map>
            <map to='#81c3cb'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:AIRLINE_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#81c3cb'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:Weather Delay Count (copy) (copy) (copy)_1137721913217441798:qk]&quot;</bucket>
            </map>
            <map to='#81c3cb'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[usr:airsystem_delay_precen (copy)_1137721913232879644:qk]&quot;</bucket>
            </map>
            <map to='#85c5cb'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:DEPARTURE_TIME:qk]&quot;</bucket>
            </map>
            <map to='#8bc8cd'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:SCHEDULED_DEPARTURE:qk]&quot;</bucket>
            </map>
            <map to='#90ccce'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:Unnamed: 0.1:qk]&quot;</bucket>
            </map>
            <map to='#96cfcf'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:Unnamed: 0:qk]&quot;</bucket>
            </map>
            <map to='#9cd2d0'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:F1:qk]&quot;</bucket>
            </map>
            <map to='#a2d6d2'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[__tableau_internal_object_id__].[cnt:flights.csv_1B912AF30B394F37934237C63A16A53D:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[pcto:sum:WEATHER_DELAY:qk:1]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:Calculation_1995376167292166146:qk]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:AIR_SYSTEM_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:Weather Delay Count (copy) (copy)_1137721913217433605:qk]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[usr:Calculation_1137721913232375835:qk]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[usr:Calculation_1995376167292223491:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[pcto:sum:AIR_SYSTEM_DELAY:qk:1]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[pcto:sum:Weather Delay Count (copy) (copy) (copy)_1137721913217441798:qk:2]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[pcto:sum:Weather Delay Count (copy) (copy) (copy)_1137721913217441798:qk:3]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[pcto:sum:Weather Delay Count (copy) (copy) (copy)_1137721913217441798:qk:4]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[pcto:sum:Weather Delay Count (copy) (copy) (copy)_1137721913217441798:qk:5]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[pcto:sum:Weather Delay Count (copy) (copy) (copy)_1137721913217441798:qk:6]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[pcto:sum:Weather Delay Count (copy) (copy) (copy)_1137721913217441798:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[pcva:sum:Weather Delay Count (copy) (copy) (copy)_1137721913217441798:qk:1]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[pcva:sum:Weather Delay Count (copy) (copy) (copy)_1137721913217441798:qk:2]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[pcva:sum:Weather Delay Count (copy) (copy) (copy)_1137721913217441798:qk:3]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[pcva:sum:Weather Delay Count (copy) (copy) (copy)_1137721913217441798:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[pcto:sum:SECURITY_DELAY:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:DEPARTURE_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[pcto:sum:Weather Delay Count (copy) (copy)_1137721913217433605:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:DEPARTURE_DELAY:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='Unnamed: 0' />
        <field-sort-custom-order field='Unnamed: 0.1' />
        <field-sort-custom-order field='YEAR' />
        <field-sort-custom-order field='MONTH' />
        <field-sort-custom-order field='DAY' />
        <field-sort-custom-order field='DAY_OF_WEEK' />
        <field-sort-custom-order field='AIRLINE_CODE' />
        <field-sort-custom-order field='FLIGHT_NUMBER' />
        <field-sort-custom-order field='TAIL_NUMBER' />
        <field-sort-custom-order field='Departure_IATA_CODE' />
        <field-sort-custom-order field='Destination_IATA_CODE' />
        <field-sort-custom-order field='SCHEDULED_DEPARTURE' />
        <field-sort-custom-order field='DEPARTURE_TIME' />
        <field-sort-custom-order field='DEPARTURE_DELAY' />
        <field-sort-custom-order field='TAXI_OUT' />
        <field-sort-custom-order field='WHEELS_OFF' />
        <field-sort-custom-order field='SCHEDULED_TIME' />
        <field-sort-custom-order field='ELAPSED_TIME' />
        <field-sort-custom-order field='AIR_TIME' />
        <field-sort-custom-order field='DISTANCE' />
        <field-sort-custom-order field='WHEELS_ON' />
        <field-sort-custom-order field='TAXI_IN' />
        <field-sort-custom-order field='SCHEDULED_ARRIVAL' />
        <field-sort-custom-order field='ARRIVAL_TIME' />
        <field-sort-custom-order field='ARRIVAL_DELAY' />
        <field-sort-custom-order field='Calculation_1137721913153531905' />
        <field-sort-custom-order field='DIVERTED' />
        <field-sort-custom-order field='CANCELLED' />
        <field-sort-custom-order field='CANCELLATION_REASON' />
        <field-sort-custom-order field='AIR_SYSTEM_DELAY' />
        <field-sort-custom-order field='SECURITY_DELAY' />
        <field-sort-custom-order field='AIRLINE_DELAY' />
        <field-sort-custom-order field='LATE_AIRCRAFT_DELAY' />
        <field-sort-custom-order field='WEATHER_DELAY' />
        <field-sort-custom-order field='Calculation_1137721913216823299' />
        <field-sort-custom-order field='Calculation_1137721913232375835' />
        <field-sort-custom-order field='airsystem_delay_precen (copy)_1137721913232879644' />
        <field-sort-custom-order field='airsystem_delay_precen (copy) (copy)_1137721913232887837' />
        <field-sort-custom-order field='lateAircraft_delay_percent (copy)_1137721913233371166' />
        <field-sort-custom-order field='lateAircraft_delay_percent (copy) (copy)_1137721913233379359' />
        <field-sort-custom-order field='Weather Delay Count (copy)_1137721913217822727' />
        <field-sort-custom-order field='Weather Delay Count (copy)_1137721913217421316' />
        <field-sort-custom-order field='Calculation_1137721913218289672' />
        <field-sort-custom-order field='Weather Delay Count (copy) (copy)_1137721913217433605' />
        <field-sort-custom-order field='Weather Delay Count (copy) (copy) (copy)_1137721913217441798' />
        <field-sort-custom-order field='Airline_CODE' />
        <field-sort-custom-order field='AIRLINE' />
        <field-sort-custom-order field='IATA_CODE' />
        <field-sort-custom-order field='AIRPORT' />
        <field-sort-custom-order field='CITY' />
        <field-sort-custom-order field='STATE' />
        <field-sort-custom-order field='COUNTRY' />
        <field-sort-custom-order field='LATITUDE' />
        <field-sort-custom-order field='LONGITUDE' />
        <field-sort-custom-order field='IATA_CODE (airports.csv1)' />
        <field-sort-custom-order field='AIRPORT (airports.csv1)' />
        <field-sort-custom-order field='CITY (airports.csv1)' />
        <field-sort-custom-order field='STATE (airports.csv1)' />
        <field-sort-custom-order field='COUNTRY (airports.csv1)' />
        <field-sort-custom-order field='LATITUDE (airports.csv1)' />
        <field-sort-custom-order field='LONGITUDE (airports.csv1)' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='flights.csv' id='flights.csv_1B912AF30B394F37934237C63A16A53D'>
            <properties context=''>
              <relation join='left' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[flights.csv].[Destination_IATA_CODE]' />
                    <expression op='[airports.csv1].[IATA_CODE]' />
                  </expression>
                </clause>
                <relation join='left' type='join'>
                  <clause type='join'>
                    <expression op='='>
                      <expression op='[flights.csv].[Departure_IATA_CODE]' />
                      <expression op='[airports.csv].[IATA_CODE]' />
                    </expression>
                  </clause>
                  <relation join='left' type='join'>
                    <clause type='join'>
                      <expression op='='>
                        <expression op='[flights.csv].[AIRLINE_CODE]' />
                        <expression op='[airlines.csv].[Airline_CODE]' />
                      </expression>
                    </clause>
                    <relation connection='textscan.0r01osj0x42bbv1dt1elf0v5ybt3' name='flights.csv' table='[flights#csv]' type='table'>
                      <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                        <column datatype='integer' name='F1' ordinal='0' />
                        <column datatype='integer' name='Unnamed: 0' ordinal='1' />
                        <column datatype='integer' name='Unnamed: 0.1' ordinal='2' />
                        <column datatype='integer' name='YEAR' ordinal='3' />
                        <column datatype='integer' name='MONTH' ordinal='4' />
                        <column datatype='integer' name='DAY' ordinal='5' />
                        <column datatype='integer' name='DAY_OF_WEEK' ordinal='6' />
                        <column datatype='string' name='AIRLINE_CODE' ordinal='7' />
                        <column datatype='integer' name='FLIGHT_NUMBER' ordinal='8' />
                        <column datatype='string' name='TAIL_NUMBER' ordinal='9' />
                        <column datatype='string' name='Departure_IATA_CODE' ordinal='10' />
                        <column datatype='string' name='Destination_IATA_CODE' ordinal='11' />
                        <column datatype='integer' name='SCHEDULED_DEPARTURE' ordinal='12' />
                        <column datatype='integer' name='DEPARTURE_TIME' ordinal='13' />
                        <column datatype='integer' name='DEPARTURE_DELAY' ordinal='14' />
                        <column datatype='integer' name='TAXI_OUT' ordinal='15' />
                        <column datatype='integer' name='WHEELS_OFF' ordinal='16' />
                        <column datatype='integer' name='SCHEDULED_TIME' ordinal='17' />
                        <column datatype='integer' name='ELAPSED_TIME' ordinal='18' />
                        <column datatype='integer' name='AIR_TIME' ordinal='19' />
                        <column datatype='integer' name='DISTANCE' ordinal='20' />
                        <column datatype='integer' name='WHEELS_ON' ordinal='21' />
                        <column datatype='integer' name='TAXI_IN' ordinal='22' />
                        <column datatype='integer' name='SCHEDULED_ARRIVAL' ordinal='23' />
                        <column datatype='integer' name='ARRIVAL_TIME' ordinal='24' />
                        <column datatype='integer' name='ARRIVAL_DELAY' ordinal='25' />
                        <column datatype='integer' name='DIVERTED' ordinal='26' />
                        <column datatype='integer' name='CANCELLED' ordinal='27' />
                        <column datatype='string' name='CANCELLATION_REASON' ordinal='28' />
                        <column datatype='integer' name='AIR_SYSTEM_DELAY' ordinal='29' />
                        <column datatype='integer' name='SECURITY_DELAY' ordinal='30' />
                        <column datatype='integer' name='AIRLINE_DELAY' ordinal='31' />
                        <column datatype='integer' name='LATE_AIRCRAFT_DELAY' ordinal='32' />
                        <column datatype='integer' name='WEATHER_DELAY' ordinal='33' />
                      </columns>
                    </relation>
                    <relation connection='textscan.0r01osj0x42bbv1dt1elf0v5ybt3' name='airlines.csv' table='[airlines#csv]' type='table'>
                      <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                        <column datatype='string' name='Airline_CODE' ordinal='0' />
                        <column datatype='string' name='AIRLINE' ordinal='1' />
                      </columns>
                    </relation>
                  </relation>
                  <relation connection='textscan.0r01osj0x42bbv1dt1elf0v5ybt3' name='airports.csv' table='[airports#csv]' type='table'>
                    <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                      <column datatype='string' name='IATA_CODE' ordinal='0' />
                      <column datatype='string' name='AIRPORT' ordinal='1' />
                      <column datatype='string' name='CITY' ordinal='2' />
                      <column datatype='string' name='STATE' ordinal='3' />
                      <column datatype='string' name='COUNTRY' ordinal='4' />
                      <column datatype='real' name='LATITUDE' ordinal='5' />
                      <column datatype='real' name='LONGITUDE' ordinal='6' />
                    </columns>
                  </relation>
                </relation>
                <relation connection='textscan.0r01osj0x42bbv1dt1elf0v5ybt3' name='airports.csv1' table='[airports#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='string' name='IATA_CODE' ordinal='0' />
                    <column datatype='string' name='AIRPORT' ordinal='1' />
                    <column datatype='string' name='CITY' ordinal='2' />
                    <column datatype='string' name='STATE' ordinal='3' />
                    <column datatype='string' name='COUNTRY' ordinal='4' />
                    <column datatype='real' name='LATITUDE' ordinal='5' />
                    <column datatype='real' name='LONGITUDE' ordinal='6' />
                  </columns>
                </relation>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 2 (generated)' name='[Action2_9CF105781C0B43CDB5588305A7769434]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Delay Cause Percent' type='sheet' worksheet='Most Delay Airline' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Delay Cause Percent' />
      </command>
    </action>
    <action caption='Highlight 1 (generated)' name='[Action3_51C3C681C36B4B6D8ADE4B4EECA190DC]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Delay Cause Percent' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Delay Cause Percent' />
      </command>
    </action>
    <action caption='Filter 4 (generated) 1' name='[Action6_8AE30EEAB11C48BBBCD5C1839447D605]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Delay by Airline and Airport with Cause (2)' type='sheet' worksheet='Most Delay Airport' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Delay by Airline and Airport with Cause (2)' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action7_3220F16DCAF148AFB23758160D4C4603]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Delays with map' type='sheet' worksheet='Delay Time by States on Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Delays with map' />
      </command>
    </action>
    <action caption='Filter 5 (generated) 1' name='[Action7_CED46D628BFA48EF91AF33F6645A70B1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Delay by Airline and Airport with Cause (2)' type='sheet' worksheet='Most Delay Airline' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Delay by Airline and Airport with Cause (2)' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Delay Cause Percentage'>
      <table>
        <view>
          <datasources>
            <datasource caption='flights.csv+ (Multiple Connections)' name='federated.133eozg02trsfq1g9xb1j1lsvdsg' />
          </datasources>
          <datasource-dependencies datasource='federated.133eozg02trsfq1g9xb1j1lsvdsg'>
            <column caption='Airline' datatype='string' name='[AIRLINE]' role='dimension' type='nominal' />
            <column caption='Airline Delay' datatype='integer' name='[AIRLINE_DELAY]' role='measure' type='quantitative' />
            <column caption='Airport' datatype='string' name='[AIRPORT]' role='dimension' type='nominal' />
            <column caption='Air System Delay' datatype='integer' name='[AIR_SYSTEM_DELAY]' role='measure' type='quantitative' />
            <column caption='Weather Delay Count' datatype='integer' name='[Calculation_1137721913216823299]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [WEATHER_DELAY] &gt; 0 THEN 1 ELSE 0 END' />
            </column>
            <column caption='Total Delay Count' datatype='integer' name='[Calculation_1137721913218289672]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Weather Delay Count (copy)_1137721913217421316])+SUM([Weather Delay Count (copy) (copy)_1137721913217433605])+SUM([Weather Delay Count (copy) (copy) (copy)_1137721913217441798])+SUM([Weather Delay Count (copy)_1137721913217822727])+SUM([Calculation_1137721913216823299])' />
            </column>
            <column caption='Air System Delay Percent' datatype='real' name='[Calculation_1137721913232375835]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Weather Delay Count (copy)_1137721913217421316])/[Calculation_1137721913218289672]' />
            </column>
            <column caption='Late Aircraft Delay' datatype='integer' name='[LATE_AIRCRAFT_DELAY]' role='measure' type='quantitative' />
            <column caption='Security Delay' datatype='integer' name='[SECURITY_DELAY]' role='measure' type='quantitative' />
            <column caption='Weather Delay' datatype='integer' name='[WEATHER_DELAY]' role='measure' type='quantitative' />
            <column caption='Late Aircraf Delay Count' datatype='integer' name='[Weather Delay Count (copy) (copy) (copy)_1137721913217441798]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [LATE_AIRCRAFT_DELAY] &gt; 0 THEN 1 ELSE 0 END' />
            </column>
            <column caption='Airline Delay Count' datatype='integer' name='[Weather Delay Count (copy) (copy)_1137721913217433605]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [AIRLINE_DELAY] &gt; 0 THEN 1 ELSE 0 END' />
            </column>
            <column caption='Air System Delay Count' datatype='integer' name='[Weather Delay Count (copy)_1137721913217421316]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [AIR_SYSTEM_DELAY] &gt; 0 THEN 1 ELSE 0 END' />
            </column>
            <column caption='Security Delay Count' datatype='integer' name='[Weather Delay Count (copy)_1137721913217822727]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [SECURITY_DELAY] &gt; 0 THEN 1 ELSE 0 END' />
            </column>
            <column caption='Late Aircraft Delay Percent' datatype='real' name='[airsystem_delay_precen (copy) (copy)_1137721913232887837]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Weather Delay Count (copy) (copy) (copy)_1137721913217441798])/[Calculation_1137721913218289672]' />
            </column>
            <column caption='Airline Delay Percent' datatype='real' name='[airsystem_delay_precen (copy)_1137721913232879644]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Weather Delay Count (copy) (copy)_1137721913217433605])/[Calculation_1137721913218289672]' />
            </column>
            <column caption='Weather Delay Percent' datatype='real' name='[lateAircraft_delay_percent (copy) (copy)_1137721913233379359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_1137721913216823299])/[Calculation_1137721913218289672]' />
            </column>
            <column caption='Security Delay Percent' datatype='real' name='[lateAircraft_delay_percent (copy)_1137721913233371166]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Weather Delay Count (copy)_1137721913217822727])/[Calculation_1137721913218289672]' />
            </column>
            <column-instance column='[Weather Delay Count (copy)_1137721913217822727]' derivation='Sum' name='[pcto:sum:Weather Delay Count (copy)_1137721913217822727:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_1137721913216823299]' derivation='Sum' name='[sum:Calculation_1137721913216823299:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Weather Delay Count (copy) (copy) (copy)_1137721913217441798]' derivation='Sum' name='[sum:Weather Delay Count (copy) (copy) (copy)_1137721913217441798:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Weather Delay Count (copy) (copy)_1137721913217433605]' derivation='Sum' name='[sum:Weather Delay Count (copy) (copy)_1137721913217433605:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Weather Delay Count (copy)_1137721913217421316]' derivation='Sum' name='[sum:Weather Delay Count (copy)_1137721913217421316:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1137721913232375835]' derivation='User' name='[usr:Calculation_1137721913232375835:qk]' pivot='key' type='quantitative' />
            <column-instance column='[airsystem_delay_precen (copy) (copy)_1137721913232887837]' derivation='User' name='[usr:airsystem_delay_precen (copy) (copy)_1137721913232887837:qk]' pivot='key' type='quantitative' />
            <column-instance column='[airsystem_delay_precen (copy)_1137721913232879644]' derivation='User' name='[usr:airsystem_delay_precen (copy)_1137721913232879644:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lateAircraft_delay_percent (copy) (copy)_1137721913233379359]' derivation='User' name='[usr:lateAircraft_delay_percent (copy) (copy)_1137721913233379359:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lateAircraft_delay_percent (copy)_1137721913233371166]' derivation='User' name='[usr:lateAircraft_delay_percent (copy)_1137721913233371166:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[usr:Calculation_1137721913232375835:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[usr:airsystem_delay_precen (copy)_1137721913232879644:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[usr:airsystem_delay_precen (copy) (copy)_1137721913232887837:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[usr:lateAircraft_delay_percent (copy)_1137721913233371166:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[usr:lateAircraft_delay_percent (copy) (copy)_1137721913233379359:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:Weather Delay Count (copy) (copy)_1137721913217433605:qk]&quot;</bucket>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:Weather Delay Count (copy) (copy) (copy)_1137721913217441798:qk]&quot;</bucket>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:Weather Delay Count (copy)_1137721913217421316:qk]&quot;</bucket>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:Calculation_1137721913216823299:qk]&quot;</bucket>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[pcto:sum:Weather Delay Count (copy)_1137721913217822727:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Action (Airline)]'>
            <groupfilter function='level-members' level='[AIRLINE]' user:ui-action-filter='[Action7_CED46D628BFA48EF91AF33F6645A70B1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Action (Airport)]'>
            <groupfilter function='level-members' level='[AIRPORT]' user:ui-action-filter='[Action6_8AE30EEAB11C48BBBCD5C1839447D605]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[:Measure Names]</column>
            <column>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Action (Airport)]</column>
            <column>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Action (Airline)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Multiple Values]' />
              <color column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[:Measure Names]' />
              <text column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[:Measure Names]' />
              <text column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='12' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{CF665D90-32F2-4C68-AC76-A558CE4F4DC7}' />
    </worksheet>
    <worksheet name='Delay Cause of Airline '>
      <table>
        <view>
          <datasources>
            <datasource caption='flights.csv+ (Multiple Connections)' name='federated.133eozg02trsfq1g9xb1j1lsvdsg' />
          </datasources>
          <datasource-dependencies datasource='federated.133eozg02trsfq1g9xb1j1lsvdsg'>
            <column caption='Airline' datatype='string' name='[AIRLINE]' role='dimension' type='nominal' />
            <column caption='Airline Delay' datatype='integer' name='[AIRLINE_DELAY]' role='measure' type='quantitative' />
            <column caption='Airport' datatype='string' name='[AIRPORT]' role='dimension' type='nominal' />
            <column caption='Air System Delay' datatype='integer' name='[AIR_SYSTEM_DELAY]' role='measure' type='quantitative' />
            <column caption='Weather Delay Count' datatype='integer' name='[Calculation_1137721913216823299]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [WEATHER_DELAY] &gt; 0 THEN 1 ELSE 0 END' />
            </column>
            <column caption='Total Delay Count' datatype='integer' name='[Calculation_1137721913218289672]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Weather Delay Count (copy)_1137721913217421316])+SUM([Weather Delay Count (copy) (copy)_1137721913217433605])+SUM([Weather Delay Count (copy) (copy) (copy)_1137721913217441798])+SUM([Weather Delay Count (copy)_1137721913217822727])+SUM([Calculation_1137721913216823299])' />
            </column>
            <column caption='Air System Delay Percent' datatype='real' name='[Calculation_1137721913232375835]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Weather Delay Count (copy)_1137721913217421316])/[Calculation_1137721913218289672]' />
            </column>
            <column caption='Late Aircraft Delay' datatype='integer' name='[LATE_AIRCRAFT_DELAY]' role='measure' type='quantitative' />
            <column caption='Security Delay' datatype='integer' name='[SECURITY_DELAY]' role='measure' type='quantitative' />
            <column caption='Weather Delay' datatype='integer' name='[WEATHER_DELAY]' role='measure' type='quantitative' />
            <column caption='Late Aircraf Delay Count' datatype='integer' name='[Weather Delay Count (copy) (copy) (copy)_1137721913217441798]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [LATE_AIRCRAFT_DELAY] &gt; 0 THEN 1 ELSE 0 END' />
            </column>
            <column caption='Airline Delay Count' datatype='integer' name='[Weather Delay Count (copy) (copy)_1137721913217433605]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [AIRLINE_DELAY] &gt; 0 THEN 1 ELSE 0 END' />
            </column>
            <column caption='Air System Delay Count' datatype='integer' name='[Weather Delay Count (copy)_1137721913217421316]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [AIR_SYSTEM_DELAY] &gt; 0 THEN 1 ELSE 0 END' />
            </column>
            <column caption='Security Delay Count' datatype='integer' name='[Weather Delay Count (copy)_1137721913217822727]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [SECURITY_DELAY] &gt; 0 THEN 1 ELSE 0 END' />
            </column>
            <column caption='Late Aircraft Delay Percent' datatype='real' name='[airsystem_delay_precen (copy) (copy)_1137721913232887837]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Weather Delay Count (copy) (copy) (copy)_1137721913217441798])/[Calculation_1137721913218289672]' />
            </column>
            <column caption='Airline Delay Percent' datatype='real' name='[airsystem_delay_precen (copy)_1137721913232879644]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Weather Delay Count (copy) (copy)_1137721913217433605])/[Calculation_1137721913218289672]' />
            </column>
            <column caption='Weather Delay Percent' datatype='real' name='[lateAircraft_delay_percent (copy) (copy)_1137721913233379359]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_1137721913216823299])/[Calculation_1137721913218289672]' />
            </column>
            <column caption='Security Delay Percent' datatype='real' name='[lateAircraft_delay_percent (copy)_1137721913233371166]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Weather Delay Count (copy)_1137721913217822727])/[Calculation_1137721913218289672]' />
            </column>
            <column-instance column='[AIRLINE]' derivation='None' name='[none:AIRLINE:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1137721913232375835]' derivation='User' name='[usr:Calculation_1137721913232375835:qk]' pivot='key' type='quantitative' />
            <column-instance column='[airsystem_delay_precen (copy) (copy)_1137721913232887837]' derivation='User' name='[usr:airsystem_delay_precen (copy) (copy)_1137721913232887837:qk]' pivot='key' type='quantitative' />
            <column-instance column='[airsystem_delay_precen (copy)_1137721913232879644]' derivation='User' name='[usr:airsystem_delay_precen (copy)_1137721913232879644:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lateAircraft_delay_percent (copy) (copy)_1137721913233379359]' derivation='User' name='[usr:lateAircraft_delay_percent (copy) (copy)_1137721913233379359:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lateAircraft_delay_percent (copy)_1137721913233371166]' derivation='User' name='[usr:lateAircraft_delay_percent (copy)_1137721913233371166:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[usr:Calculation_1137721913232375835:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[usr:airsystem_delay_precen (copy)_1137721913232879644:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[usr:airsystem_delay_precen (copy) (copy)_1137721913232887837:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[usr:lateAircraft_delay_percent (copy)_1137721913233371166:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[usr:lateAircraft_delay_percent (copy) (copy)_1137721913233379359:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Action (Airport)]'>
            <groupfilter function='level-members' level='[AIRPORT]' user:ui-action-filter='[Action6_0FF6F78DCB4F4D1BA22FEC59371342CA]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRLINE:nk]'>
            <groupfilter function='member' level='[none:AIRLINE:nk]' member='&quot;Southwest Airlines Co.&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRLINE:nk]</column>
            <column>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[:Measure Names]</column>
            <column>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Action (Airport)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Multiple Values]' scope='rows' value='Percentage of total delay time' />
            <encoding attr='space' class='0' field='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Multiple Values]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[:Measure Names]' value='Measure Names'>
              <formatted-text>
                <run>Measure Names</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[:Measure Names]' />
              <text column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Multiple Values]</rows>
        <cols>([federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRLINE:nk] / [federated.133eozg02trsfq1g9xb1j1lsvdsg].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{3431BB23-4616-4244-B918-22EAB20AAC01}' />
    </worksheet>
    <worksheet name='Delay Time by Depart and Destination City '>
      <table>
        <view>
          <datasources>
            <datasource caption='flights.csv+ (Multiple Connections)' name='federated.133eozg02trsfq1g9xb1j1lsvdsg' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.133eozg02trsfq1g9xb1j1lsvdsg'>
            <column caption='Arrival Delay' datatype='integer' name='[ARRIVAL_DELAY]' role='measure' type='quantitative' />
            <column caption='Destination_CITY (airports.csv1)' datatype='string' name='[CITY (airports.csv1)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Departure_City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[ARRIVAL_DELAY]' derivation='Avg' name='[avg:ARRIVAL_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CITY (airports.csv1)]' derivation='None' name='[none:CITY (airports.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[CITY]' derivation='None' name='[none:CITY:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Action (State)]'>
            <groupfilter function='level-members' level='[STATE]' user:ui-action-filter='[Action7_3220F16DCAF148AFB23758160D4C4603]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:ARRIVAL_DELAY:qk]' scope='cols' value='Avg. Arrival Delay Minutes' />
            <encoding attr='space' class='0' field='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:ARRIVAL_DELAY:qk]' field-type='quantitative' max='220.0' min='-10.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:ARRIVAL_DELAY:qk]' max='220.0' min='-10.0' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:ARRIVAL_DELAY:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:CITY:nk] / [federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:CITY (airports.csv1):nk])</rows>
        <cols>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:ARRIVAL_DELAY:qk]</cols>
      </table>
      <simple-id uuid='{2342A331-1194-4AE9-A1E3-B58F17BECD17}' />
    </worksheet>
    <worksheet name='Delay Time by States on Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='flights.csv+ (Multiple Connections)' name='federated.133eozg02trsfq1g9xb1j1lsvdsg' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.133eozg02trsfq1g9xb1j1lsvdsg'>
            <column caption='Airline Delay' datatype='integer' name='[AIRLINE_DELAY]' role='measure' type='quantitative' />
            <column caption='Arrival Delay' datatype='integer' name='[ARRIVAL_DELAY]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[AIRLINE_DELAY]' derivation='Avg' name='[avg:AIRLINE_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ARRIVAL_DELAY]' derivation='Avg' name='[avg:ARRIVAL_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:AIRLINE_DELAY:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>264.0</max>
          </filter>
          <filter class='categorical' column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:STATE:nk]'>
            <groupfilter function='except' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:STATE:nk]' />
              <groupfilter function='member' level='[none:STATE:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:STATE:nk]</column>
            <column>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:AIRLINE_DELAY:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Longitude (generated)]' field-type='quantitative' max='38532013.249633268' min='21107007.999020319' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Latitude (generated)]' field-type='quantitative' max='7431425.8082653694' min='2852470.7980284579' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:ARRIVAL_DELAY:qk]' max='10.0' min='-10.0' num-steps='10' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#fafdff</color>
                <color>#f4f7f8</color>
                <color>#eff1f2</color>
                <color>#e9ebec</color>
                <color>#e4e5e5</color>
                <color>#dedfdf</color>
                <color>#d9d9d9</color>
                <color>#dab9b7</color>
                <color>#dc9895</color>
                <color>#dd7872</color>
                <color>#df564f</color>
                <color>#e0352c</color>
                <color>#e21308</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:STATE:nk]' />
              <lod column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:STATE:nk]' />
              <color column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:ARRIVAL_DELAY:qk]' />
              <geometry column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Latitude (generated)]</rows>
        <cols>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{801AC71D-31DA-4C3D-80AD-BEBC0B5082BB}' />
    </worksheet>
    <worksheet name='Delay Time by States with Airport and Airline (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='flights.csv+ (Multiple Connections)' name='federated.133eozg02trsfq1g9xb1j1lsvdsg' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.133eozg02trsfq1g9xb1j1lsvdsg'>
            <column caption='Airline' datatype='string' name='[AIRLINE]' role='dimension' type='nominal' />
            <column caption='Airport' datatype='string' name='[AIRPORT]' role='dimension' type='nominal' />
            <column caption='Arrival Delay' datatype='integer' name='[ARRIVAL_DELAY]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[ARRIVAL_DELAY]' derivation='Avg' name='[avg:ARRIVAL_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AIRLINE]' derivation='None' name='[none:AIRLINE:nk]' pivot='key' type='nominal' />
            <column-instance column='[AIRPORT]' derivation='None' name='[none:AIRPORT:nk]' pivot='key' type='nominal' />
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Action (State)]'>
            <groupfilter function='level-members' level='[STATE]' user:ui-action-filter='[Action1_4AAA3E240DB443E9BAB9BA2EB9B351E1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRLINE:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:ARRIVAL_DELAY:qk]' shelf='rows' />
            <shelf-sort-v2 dimension-to-sort='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:STATE:nk]' direction='DESC' measure-to-sort-by='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:ARRIVAL_DELAY:qk]' shelf='rows' />
            <shelf-sort-v2 dimension-to-sort='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRPORT:nk]' direction='DESC' measure-to-sort-by='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:ARRIVAL_DELAY:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:ARRIVAL_DELAY:qk]' field-type='quantitative' max='220.0' min='-10.0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:ARRIVAL_DELAY:qk]' scope='cols' value='Avg. Arrival Delay Minutes' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:ARRIVAL_DELAY:qk]' max='220.0' min='-10.0' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:ARRIVAL_DELAY:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:STATE:nk] / ([federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRPORT:nk] / [federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRLINE:nk]))</rows>
        <cols>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:ARRIVAL_DELAY:qk]</cols>
      </table>
      <simple-id uuid='{4EF52997-75C2-44F8-8687-7E73BC1AE53E}' />
    </worksheet>
    <worksheet name='Delay by Airlines'>
      <table>
        <view>
          <datasources>
            <datasource caption='flights.csv+ (Multiple Connections)' name='federated.133eozg02trsfq1g9xb1j1lsvdsg' />
          </datasources>
          <datasource-dependencies datasource='federated.133eozg02trsfq1g9xb1j1lsvdsg'>
            <column caption='Airline' datatype='string' name='[AIRLINE]' role='dimension' type='nominal' />
            <column caption='Airport' datatype='string' name='[AIRPORT]' role='dimension' type='nominal' />
            <column caption='Arrival Delay' datatype='integer' name='[ARRIVAL_DELAY]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[ARRIVAL_DELAY]' derivation='Avg' name='[avg:ARRIVAL_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AIRLINE]' derivation='None' name='[none:AIRLINE:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Action (Airline)]'>
            <groupfilter function='level-members' level='[AIRLINE]' user:ui-action-filter='[Action6_99C73BE3EFB14BA58C40D5FD2719A38B]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Action (Airport)]'>
            <groupfilter function='level-members' level='[AIRPORT]' user:ui-action-filter='[Action6_0FF6F78DCB4F4D1BA22FEC59371342CA]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Action (State)]'>
            <groupfilter function='level-members' level='[STATE]' user:ui-action-filter='[Action1_4AAA3E240DB443E9BAB9BA2EB9B351E1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRLINE:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:ARRIVAL_DELAY:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Action (State)]</column>
            <column>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Action (Airport)]</column>
            <column>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Action (Airline)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:ARRIVAL_DELAY:qk]' scope='cols' value='Avg. Arrival Delay Minutes' />
            <encoding attr='space' class='0' field='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:ARRIVAL_DELAY:qk]' field-type='quantitative' max='50.0' min='-10.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:ARRIVAL_DELAY:qk]' max='10.0' min='-10.0' num-steps='20' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#fffaff</color>
                <color>#fbf7fb</color>
                <color>#f8f4f8</color>
                <color>#f4f1f4</color>
                <color>#f1eef1</color>
                <color>#edebed</color>
                <color>#eae8ea</color>
                <color>#e6e5e6</color>
                <color>#e3e2e3</color>
                <color>#dfdfdf</color>
                <color>#dcdcdc</color>
                <color>#d9d9d9</color>
                <color>#d9c8c7</color>
                <color>#dab8b6</color>
                <color>#dba7a4</color>
                <color>#dc9792</color>
                <color>#dd8680</color>
                <color>#de756e</color>
                <color>#df645c</color>
                <color>#e0534a</color>
                <color>#e14237</color>
                <color>#e23024</color>
                <color>#e31f12</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:ARRIVAL_DELAY:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRLINE:nk]</rows>
        <cols>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:ARRIVAL_DELAY:qk]</cols>
      </table>
      <simple-id uuid='{564C90D0-A9FE-4456-BE07-F55B2576494E}' />
    </worksheet>
    <worksheet name='Delay by Airports'>
      <table>
        <view>
          <datasources>
            <datasource caption='flights.csv+ (Multiple Connections)' name='federated.133eozg02trsfq1g9xb1j1lsvdsg' />
          </datasources>
          <datasource-dependencies datasource='federated.133eozg02trsfq1g9xb1j1lsvdsg'>
            <column caption='Airport' datatype='string' name='[AIRPORT]' role='dimension' type='nominal' />
            <column caption='Arrival Delay' datatype='integer' name='[ARRIVAL_DELAY]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[ARRIVAL_DELAY]' derivation='Avg' name='[avg:ARRIVAL_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AIRPORT]' derivation='None' name='[none:AIRPORT:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Action (State)]'>
            <groupfilter function='level-members' level='[STATE]' user:ui-action-filter='[Action1_4AAA3E240DB443E9BAB9BA2EB9B351E1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRPORT:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:ARRIVAL_DELAY:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:ARRIVAL_DELAY:qk]' scope='cols' value='Avg. Arrival Delay Minutes' />
            <encoding attr='space' class='0' field='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:ARRIVAL_DELAY:qk]' field-type='quantitative' max='50.0' min='-10.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:ARRIVAL_DELAY:qk]' max='10.0' min='-10.0' num-steps='20' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#fafdff</color>
                <color>#f4f7f8</color>
                <color>#eff1f2</color>
                <color>#e9ebec</color>
                <color>#e4e5e5</color>
                <color>#dedfdf</color>
                <color>#d9d9d9</color>
                <color>#dbb9b7</color>
                <color>#de9894</color>
                <color>#e17770</color>
                <color>#e4544c</color>
                <color>#e73126</color>
                <color>#ea0d00</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:ARRIVAL_DELAY:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRPORT:nk]</rows>
        <cols>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:ARRIVAL_DELAY:qk]</cols>
      </table>
      <simple-id uuid='{8DC9420F-FA24-46E0-B4B2-FC9097165A37}' />
    </worksheet>
    <worksheet name='Most Delay Airline'>
      <table>
        <view>
          <datasources>
            <datasource caption='flights.csv+ (Multiple Connections)' name='federated.133eozg02trsfq1g9xb1j1lsvdsg' />
          </datasources>
          <datasource-dependencies datasource='federated.133eozg02trsfq1g9xb1j1lsvdsg'>
            <column caption='Airline' datatype='string' name='[AIRLINE]' role='dimension' type='nominal' />
            <column caption='Airline Delay' datatype='integer' name='[AIRLINE_DELAY]' role='measure' type='quantitative' />
            <column caption='Airport' datatype='string' name='[AIRPORT]' role='dimension' type='nominal' />
            <column caption='Air System Delay' datatype='integer' name='[AIR_SYSTEM_DELAY]' role='measure' type='quantitative' />
            <column caption='Weather Delay Count' datatype='integer' name='[Calculation_1137721913216823299]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [WEATHER_DELAY] &gt; 0 THEN 1 ELSE 0 END' />
            </column>
            <column caption='Total Delay Count' datatype='integer' name='[Calculation_1137721913218289672]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Weather Delay Count (copy)_1137721913217421316])+SUM([Weather Delay Count (copy) (copy)_1137721913217433605])+SUM([Weather Delay Count (copy) (copy) (copy)_1137721913217441798])+SUM([Weather Delay Count (copy)_1137721913217822727])+SUM([Calculation_1137721913216823299])' />
            </column>
            <column caption='Late Aircraft Delay' datatype='integer' name='[LATE_AIRCRAFT_DELAY]' role='measure' type='quantitative' />
            <column caption='Security Delay' datatype='integer' name='[SECURITY_DELAY]' role='measure' type='quantitative' />
            <column caption='Weather Delay' datatype='integer' name='[WEATHER_DELAY]' role='measure' type='quantitative' />
            <column caption='Late Aircraf Delay Count' datatype='integer' name='[Weather Delay Count (copy) (copy) (copy)_1137721913217441798]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [LATE_AIRCRAFT_DELAY] &gt; 0 THEN 1 ELSE 0 END' />
            </column>
            <column caption='Airline Delay Count' datatype='integer' name='[Weather Delay Count (copy) (copy)_1137721913217433605]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [AIRLINE_DELAY] &gt; 0 THEN 1 ELSE 0 END' />
            </column>
            <column caption='Air System Delay Count' datatype='integer' name='[Weather Delay Count (copy)_1137721913217421316]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [AIR_SYSTEM_DELAY] &gt; 0 THEN 1 ELSE 0 END' />
            </column>
            <column caption='Security Delay Count' datatype='integer' name='[Weather Delay Count (copy)_1137721913217822727]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [SECURITY_DELAY] &gt; 0 THEN 1 ELSE 0 END' />
            </column>
            <column-instance column='[AIRLINE]' derivation='None' name='[none:AIRLINE:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1137721913216823299]' derivation='Sum' name='[sum:Calculation_1137721913216823299:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Weather Delay Count (copy) (copy) (copy)_1137721913217441798]' derivation='Sum' name='[sum:Weather Delay Count (copy) (copy) (copy)_1137721913217441798:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Weather Delay Count (copy) (copy)_1137721913217433605]' derivation='Sum' name='[sum:Weather Delay Count (copy) (copy)_1137721913217433605:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Weather Delay Count (copy)_1137721913217421316]' derivation='Sum' name='[sum:Weather Delay Count (copy)_1137721913217421316:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Weather Delay Count (copy)_1137721913217822727]' derivation='Sum' name='[sum:Weather Delay Count (copy)_1137721913217822727:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1137721913218289672]' derivation='User' name='[usr:Calculation_1137721913218289672:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Action (Airport)]'>
            <groupfilter function='level-members' level='[AIRPORT]' user:ui-action-filter='[Action6_0FF6F78DCB4F4D1BA22FEC59371342CA]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRLINE:nk]'>
            <groupfilter function='level-members' level='[none:AIRLINE:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRLINE:nk]</column>
            <column>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Action (Airport)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[usr:Calculation_1137721913218289672:qk]' />
              <text column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[usr:Calculation_1137721913218289672:qk]' />
              <text column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRLINE:nk]' />
              <color column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRLINE:nk]' />
              <lod column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:Calculation_1137721913216823299:qk]' />
              <lod column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:Weather Delay Count (copy) (copy) (copy)_1137721913217441798:qk]' />
              <lod column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:Weather Delay Count (copy) (copy)_1137721913217433605:qk]' />
              <lod column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:Weather Delay Count (copy)_1137721913217421316:qk]' />
              <lod column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:Weather Delay Count (copy)_1137721913217822727:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-size' value='10' />
                <format attr='font-weight' value='bold' />
                <format attr='color' value='#ffffff' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{339D2318-52E7-45E1-9B39-7C510843AA7F}' />
    </worksheet>
    <worksheet name='Most Delay Airport'>
      <table>
        <view>
          <datasources>
            <datasource caption='flights.csv+ (Multiple Connections)' name='federated.133eozg02trsfq1g9xb1j1lsvdsg' />
          </datasources>
          <datasource-dependencies datasource='federated.133eozg02trsfq1g9xb1j1lsvdsg'>
            <column caption='Airline' datatype='string' name='[AIRLINE]' role='dimension' type='nominal' />
            <column caption='Airline Delay' datatype='integer' name='[AIRLINE_DELAY]' role='measure' type='quantitative' />
            <column caption='Airport' datatype='string' name='[AIRPORT]' role='dimension' type='nominal' />
            <column caption='Air System Delay' datatype='integer' name='[AIR_SYSTEM_DELAY]' role='measure' type='quantitative' />
            <column caption='Weather Delay Count' datatype='integer' name='[Calculation_1137721913216823299]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [WEATHER_DELAY] &gt; 0 THEN 1 ELSE 0 END' />
            </column>
            <column caption='Total Delay Count' datatype='integer' name='[Calculation_1137721913218289672]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Weather Delay Count (copy)_1137721913217421316])+SUM([Weather Delay Count (copy) (copy)_1137721913217433605])+SUM([Weather Delay Count (copy) (copy) (copy)_1137721913217441798])+SUM([Weather Delay Count (copy)_1137721913217822727])+SUM([Calculation_1137721913216823299])' />
            </column>
            <column caption='Late Aircraft Delay' datatype='integer' name='[LATE_AIRCRAFT_DELAY]' role='measure' type='quantitative' />
            <column caption='Security Delay' datatype='integer' name='[SECURITY_DELAY]' role='measure' type='quantitative' />
            <column caption='Weather Delay' datatype='integer' name='[WEATHER_DELAY]' role='measure' type='quantitative' />
            <column caption='Late Aircraf Delay Count' datatype='integer' name='[Weather Delay Count (copy) (copy) (copy)_1137721913217441798]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [LATE_AIRCRAFT_DELAY] &gt; 0 THEN 1 ELSE 0 END' />
            </column>
            <column caption='Airline Delay Count' datatype='integer' name='[Weather Delay Count (copy) (copy)_1137721913217433605]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [AIRLINE_DELAY] &gt; 0 THEN 1 ELSE 0 END' />
            </column>
            <column caption='Air System Delay Count' datatype='integer' name='[Weather Delay Count (copy)_1137721913217421316]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [AIR_SYSTEM_DELAY] &gt; 0 THEN 1 ELSE 0 END' />
            </column>
            <column caption='Security Delay Count' datatype='integer' name='[Weather Delay Count (copy)_1137721913217822727]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [SECURITY_DELAY] &gt; 0 THEN 1 ELSE 0 END' />
            </column>
            <column-instance column='[AIRPORT]' derivation='None' name='[none:AIRPORT:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1137721913218289672]' derivation='User' name='[usr:Calculation_1137721913218289672:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Action (Airline)]'>
            <groupfilter function='level-members' level='[AIRLINE]' user:ui-action-filter='[Action2_9CF105781C0B43CDB5588305A7769434]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Action (Airline)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[usr:Calculation_1137721913218289672:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[usr:Calculation_1137721913218289672:qk]' />
              <size column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[usr:Calculation_1137721913218289672:qk]' />
              <text column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRPORT:nk]' />
              <text column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[usr:Calculation_1137721913218289672:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-size' value='10' />
                <format attr='font-weight' value='bold' />
                <format attr='color' value='#f5f5f5' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{3E842AD7-9CF9-45CB-94D1-F318B7A271BC}' />
    </worksheet>
    <worksheet name='Total Delay Count of Each Airline with Avg delay time'>
      <table>
        <view>
          <datasources>
            <datasource caption='flights.csv+ (Multiple Connections)' name='federated.133eozg02trsfq1g9xb1j1lsvdsg' />
          </datasources>
          <datasource-dependencies datasource='federated.133eozg02trsfq1g9xb1j1lsvdsg'>
            <column caption='Airline' datatype='string' name='[AIRLINE]' role='dimension' type='nominal' />
            <column caption='Airline Delay' datatype='integer' name='[AIRLINE_DELAY]' role='measure' type='quantitative' />
            <column caption='Airport' datatype='string' name='[AIRPORT]' role='dimension' type='nominal' />
            <column caption='Air System Delay' datatype='integer' name='[AIR_SYSTEM_DELAY]' role='measure' type='quantitative' />
            <column caption='Weather Delay Count' datatype='integer' name='[Calculation_1137721913216823299]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [WEATHER_DELAY] &gt; 0 THEN 1 ELSE 0 END' />
            </column>
            <column caption='Total Delay Count' datatype='integer' name='[Calculation_1137721913218289672]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Weather Delay Count (copy)_1137721913217421316])+SUM([Weather Delay Count (copy) (copy)_1137721913217433605])+SUM([Weather Delay Count (copy) (copy) (copy)_1137721913217441798])+SUM([Weather Delay Count (copy)_1137721913217822727])+SUM([Calculation_1137721913216823299])' />
            </column>
            <column caption='Late Aircraft Delay' datatype='integer' name='[LATE_AIRCRAFT_DELAY]' role='measure' type='quantitative' />
            <column caption='Security Delay' datatype='integer' name='[SECURITY_DELAY]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Weather Delay' datatype='integer' name='[WEATHER_DELAY]' role='measure' type='quantitative' />
            <column caption='Late Aircraf Delay Count' datatype='integer' name='[Weather Delay Count (copy) (copy) (copy)_1137721913217441798]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [LATE_AIRCRAFT_DELAY] &gt; 0 THEN 1 ELSE 0 END' />
            </column>
            <column caption='Airline Delay Count' datatype='integer' name='[Weather Delay Count (copy) (copy)_1137721913217433605]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [AIRLINE_DELAY] &gt; 0 THEN 1 ELSE 0 END' />
            </column>
            <column caption='Air System Delay Count' datatype='integer' name='[Weather Delay Count (copy)_1137721913217421316]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [AIR_SYSTEM_DELAY] &gt; 0 THEN 1 ELSE 0 END' />
            </column>
            <column caption='Security Delay Count' datatype='integer' name='[Weather Delay Count (copy)_1137721913217822727]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [SECURITY_DELAY] &gt; 0 THEN 1 ELSE 0 END' />
            </column>
            <column-instance column='[AIRLINE]' derivation='None' name='[none:AIRLINE:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1137721913218289672]' derivation='User' name='[usr:Calculation_1137721913218289672:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Action (Airline)]'>
            <groupfilter function='level-members' level='[AIRLINE]' user:ui-action-filter='[Action6_99C73BE3EFB14BA58C40D5FD2719A38B]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Action (Airport)]'>
            <groupfilter function='level-members' level='[AIRPORT]' user:ui-action-filter='[Action6_0FF6F78DCB4F4D1BA22FEC59371342CA]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Action (State)]'>
            <groupfilter function='level-members' level='[STATE]' user:ui-action-filter='[Action1_4AAA3E240DB443E9BAB9BA2EB9B351E1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRLINE:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[usr:Calculation_1137721913218289672:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Action (State)]</column>
            <column>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Action (Airport)]</column>
            <column>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Action (Airline)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[usr:Calculation_1137721913218289672:qk]' field-type='quantitative' max='23000' min='0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[usr:Calculation_1137721913218289672:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[usr:Calculation_1137721913218289672:qk]' />
              <text column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[usr:Calculation_1137721913218289672:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRLINE:nk]</rows>
        <cols>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[usr:Calculation_1137721913218289672:qk]</cols>
      </table>
      <simple-id uuid='{EF1CBC48-E139-4482-AF8B-168D52437CE4}' />
    </worksheet>
    <worksheet name='chart of delay count'>
      <table>
        <view>
          <datasources>
            <datasource caption='flights.csv+ (Multiple Connections)' name='federated.133eozg02trsfq1g9xb1j1lsvdsg' />
          </datasources>
          <datasource-dependencies datasource='federated.133eozg02trsfq1g9xb1j1lsvdsg'>
            <column caption='Airline' datatype='string' name='[AIRLINE]' role='dimension' type='nominal' />
            <column caption='Airline Delay' datatype='integer' name='[AIRLINE_DELAY]' role='measure' type='quantitative' />
            <column caption='Air System Delay' datatype='integer' name='[AIR_SYSTEM_DELAY]' role='measure' type='quantitative' />
            <column caption='Weather Delay Count' datatype='integer' name='[Calculation_1137721913216823299]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [WEATHER_DELAY] &gt; 0 THEN 1 ELSE 0 END' />
            </column>
            <column caption='Total Delay Count' datatype='integer' name='[Calculation_1137721913218289672]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Weather Delay Count (copy)_1137721913217421316])+SUM([Weather Delay Count (copy) (copy)_1137721913217433605])+SUM([Weather Delay Count (copy) (copy) (copy)_1137721913217441798])+SUM([Weather Delay Count (copy)_1137721913217822727])+SUM([Calculation_1137721913216823299])' />
            </column>
            <column caption='Late Aircraft Delay' datatype='integer' name='[LATE_AIRCRAFT_DELAY]' role='measure' type='quantitative' />
            <column caption='Security Delay' datatype='integer' name='[SECURITY_DELAY]' role='measure' type='quantitative' />
            <column caption='Weather Delay' datatype='integer' name='[WEATHER_DELAY]' role='measure' type='quantitative' />
            <column caption='Late Aircraf Delay Count' datatype='integer' name='[Weather Delay Count (copy) (copy) (copy)_1137721913217441798]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [LATE_AIRCRAFT_DELAY] &gt; 0 THEN 1 ELSE 0 END' />
            </column>
            <column caption='Airline Delay Count' datatype='integer' name='[Weather Delay Count (copy) (copy)_1137721913217433605]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [AIRLINE_DELAY] &gt; 0 THEN 1 ELSE 0 END' />
            </column>
            <column caption='Air System Delay Count' datatype='integer' name='[Weather Delay Count (copy)_1137721913217421316]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [AIR_SYSTEM_DELAY] &gt; 0 THEN 1 ELSE 0 END' />
            </column>
            <column caption='Security Delay Count' datatype='integer' name='[Weather Delay Count (copy)_1137721913217822727]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [SECURITY_DELAY] &gt; 0 THEN 1 ELSE 0 END' />
            </column>
            <column-instance column='[AIRLINE]' derivation='None' name='[none:AIRLINE:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1137721913216823299]' derivation='Sum' name='[sum:Calculation_1137721913216823299:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Weather Delay Count (copy) (copy) (copy)_1137721913217441798]' derivation='Sum' name='[sum:Weather Delay Count (copy) (copy) (copy)_1137721913217441798:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Weather Delay Count (copy) (copy)_1137721913217433605]' derivation='Sum' name='[sum:Weather Delay Count (copy) (copy)_1137721913217433605:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Weather Delay Count (copy)_1137721913217421316]' derivation='Sum' name='[sum:Weather Delay Count (copy)_1137721913217421316:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Weather Delay Count (copy)_1137721913217822727]' derivation='Sum' name='[sum:Weather Delay Count (copy)_1137721913217822727:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1137721913218289672]' derivation='User' name='[usr:Calculation_1137721913218289672:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:Weather Delay Count (copy)_1137721913217421316:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:Weather Delay Count (copy) (copy)_1137721913217433605:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:Weather Delay Count (copy) (copy) (copy)_1137721913217441798:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:Weather Delay Count (copy)_1137721913217822727:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:Calculation_1137721913216823299:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[usr:Calculation_1137721913218289672:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:Weather Delay Count (copy)_1137721913217421316:qk]&quot;</bucket>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:Weather Delay Count (copy) (copy)_1137721913217433605:qk]&quot;</bucket>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:Weather Delay Count (copy) (copy) (copy)_1137721913217441798:qk]&quot;</bucket>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:Weather Delay Count (copy)_1137721913217822727:qk]&quot;</bucket>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[sum:Calculation_1137721913216823299:qk]&quot;</bucket>
              <bucket>&quot;[federated.133eozg02trsfq1g9xb1j1lsvdsg].[usr:Calculation_1137721913218289672:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Action (Airline)]'>
            <groupfilter function='level-members' level='[AIRLINE]' user:ui-action-filter='[Action2_9CF105781C0B43CDB5588305A7769434]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[:Measure Names]</column>
            <column>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Action (Airline)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[:Measure Names]' value='122' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRLINE:nk]</rows>
        <cols>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{5542332A-B8F2-40A3-87C6-0EA1D7073346}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Delay Cause Percent'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98688' id='32' param='horz' type-v2='layout-flow' w='99358' x='321' y='656'>
            <zone h='98688' id='27' type-v2='layout-basic' w='99358' x='321' y='656'>
              <zone h='98688' id='19' param='horz' type-v2='layout-flow' w='53702' x='321' y='656'>
                <zone h='98688' id='5' type-v2='layout-basic' w='53702' x='321' y='656'>
                  <zone h='64550' id='3' name='Most Delay Airline' w='53702' x='321' y='656'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='34138' id='13' name='chart of delay count' w='53702' x='321' y='65206'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='98688' id='26' name='Delay Cause Percentage' show-title='false' w='45656' x='54023' y='656'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='850' minheight='850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='74' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98688' id='73' param='vert' type-v2='layout-flow' w='99358' x='321' y='656'>
                <zone fixed-size='280' h='64550' id='3' is-fixed='true' name='Most Delay Airline' w='53702' x='321' y='656'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98688' id='26' is-fixed='true' name='Delay Cause Percentage' show-title='false' w='45656' x='54023' y='656'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='265' h='34138' id='13' is-fixed='true' name='chart of delay count' w='53702' x='321' y='65206'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C41597B8-D0EB-45A3-88F8-6FEEC8527CB4}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Delay by Airline and Airport with Cause (2)'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98688' id='61' param='horz' type-v2='layout-flow' w='99358' x='321' y='656'>
            <zone h='98688' id='5' type-v2='layout-basic' w='99358' x='321' y='656'>
              <zone h='98688' id='3' name='Most Delay Airport' w='43669' x='321' y='656'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49344' id='13' name='Most Delay Airline' w='27845' x='43990' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49344' id='22' name='Total Delay Count of Each Airline with Avg delay time' w='55689' x='43990' y='656'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49344' id='59' name='Delay Cause Percentage' w='27844' x='71835' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='73' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98688' id='72' param='vert' type-v2='layout-flow' w='99358' x='321' y='656'>
                <zone fixed-size='280' h='98688' id='3' is-fixed='true' name='Most Delay Airport' w='43669' x='321' y='656'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49344' id='22' is-fixed='true' name='Total Delay Count of Each Airline with Avg delay time' w='55689' x='43990' y='656'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49344' id='13' is-fixed='true' name='Most Delay Airline' w='27845' x='43990' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49344' id='59' is-fixed='true' name='Delay Cause Percentage' w='27844' x='71835' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{4D9D52C2-38B8-4A7E-92A1-5578CDE03178}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Delays with map'>
      <style />
      <size maxheight='1219' maxwidth='2118' minheight='1219' minwidth='2118' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98688' id='35' param='horz' type-v2='layout-flow' w='99244' x='378' y='656'>
            <zone h='98688' id='5' type-v2='layout-basic' w='99244' x='378' y='656'>
              <zone h='49344' id='13' name='Delay Time by States on Map' w='99244' x='378' y='656'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49344' id='16' name='Delay Time by States with Airport and Airline (2)' w='49619' x='378' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49344' id='33' name='Delay Time by Depart and Destination City ' w='49625' x='49997' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='77' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98688' id='76' param='vert' type-v2='layout-flow' w='99244' x='378' y='656'>
                <zone fixed-size='280' h='49344' id='13' is-fixed='true' name='Delay Time by States on Map' w='99244' x='378' y='656'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49344' id='16' is-fixed='true' name='Delay Time by States with Airport and Airline (2)' w='49619' x='378' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49344' id='33' is-fixed='true' name='Delay Time by Depart and Destination City ' w='49625' x='49997' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D134076C-F8BD-416C-AB84-DBFF792F220A}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Delay Time by Depart and Destination City '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:ARRIVAL_DELAY:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:ARRIVAL_DELAY:qk]</field>
            <field>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:CITY (airports.csv1):nk]</field>
            <field>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:CITY:nk]</field>
            <field>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:STATE:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{9902B05E-6381-4F2A-8A49-CC91D1A5BB37}' />
    </window>
    <window class='worksheet' name='Delay by Airlines'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:ARRIVAL_DELAY:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[:Measure Names]</field>
            <field>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:ARRIVAL_DELAY:qk]</field>
            <field>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRLINE:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0D95F2F0-F0CD-44E3-9296-7221741EC76A}' />
    </window>
    <window class='worksheet' name='Delay by Airports'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:ARRIVAL_DELAY:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:ARRIVAL_DELAY:qk]</field>
            <field>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRPORT:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{00C4D46D-2A1B-417D-895D-86D1362BA3AD}' />
    </window>
    <window class='worksheet' name='Delay Time by States on Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:STATE:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:ARRIVAL_DELAY:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:ARRIVAL_DELAY:qk]</field>
            <field>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRLINE:nk]</field>
            <field>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRPORT:nk]</field>
            <field>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:STATE:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{05440FA0-0A84-4804-B07C-8251574FC746}' />
    </window>
    <window class='worksheet' name='Delay Time by States with Airport and Airline (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:ARRIVAL_DELAY:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:ARRIVAL_DELAY:qk]</field>
            <field>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRLINE:nk]</field>
            <field>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRPORT:nk]</field>
            <field>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:STATE:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{5433793C-C1B2-49BC-9F6C-1C98EA32321D}' />
    </window>
    <window class='worksheet' name='chart of delay count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[:Measure Names]</field>
            <field>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRLINE:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9BD0645E-CB1D-453F-A62B-24D305A8BB4E}' />
    </window>
    <window class='worksheet' name='Delay Cause of Airline '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRLINE:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[:Measure Names]</field>
            <field>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRLINE:nk]</field>
            <field>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:Calculation_1137721913223880720:qk]</field>
            <field>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:Calculation_1137721913223929873:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5F22AF28-041A-4831-A999-2A44AD30E195}' />
    </window>
    <window class='worksheet' name='Most Delay Airline'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRLINE:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRLINE:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRLINE:nk]</field>
            <field>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:Airline Delay (bin):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CED2BF46-E80F-4B10-962A-D848C70F2504}' />
    </window>
    <window class='worksheet' name='Delay Cause Percentage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[:Measure Names]' type='color' />
            <card pane-specification-id='0' param='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[Multiple Values]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[:Measure Names]</field>
            <field>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:Airline Delay (bin):qk]</field>
            <field>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:Calculation_1995376167292166146:qk]</field>
            <field>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[usr:Calculation_1137721913218289672:qk]</field>
            <field>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[usr:Calculation_1137721913232375835:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C433B0B6-A193-4FCF-BA13-F8EA270D8E99}' />
    </window>
    <window class='worksheet' maximized='true' name='Total Delay Count of Each Airline with Avg delay time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[usr:Calculation_1137721913218289672:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[:Measure Names]</field>
            <field>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[avg:ARRIVAL_DELAY:qk]</field>
            <field>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRLINE:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{63C5A86B-4541-447E-9FE8-58686CE6C94C}' />
    </window>
    <window class='worksheet' name='Most Delay Airport'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.133eozg02trsfq1g9xb1j1lsvdsg].[usr:Calculation_1137721913218289672:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[:Measure Names]</field>
            <field>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRLINE:nk]</field>
            <field>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:AIRPORT:nk]</field>
            <field>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:Calculation_1137721913223880720:qk]</field>
            <field>[federated.133eozg02trsfq1g9xb1j1lsvdsg].[none:Calculation_1137721913223929873:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F547672B-EF6B-4417-8FD7-E237D00D3811}' />
    </window>
    <window class='dashboard' name='Delay Cause Percent'>
      <viewpoints>
        <viewpoint name='Delay Cause Percentage'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Most Delay Airline'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='chart of delay count'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{2D780B86-A8E4-4145-8B1E-DC58B805A06E}' />
    </window>
    <window class='dashboard' name='Delay by Airline and Airport with Cause (2)'>
      <viewpoints>
        <viewpoint name='Delay Cause Percentage'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Most Delay Airline'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Most Delay Airport'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Delay Count of Each Airline with Avg delay time'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{7D84347D-DAEB-48D3-A197-F05ADDD79ADD}' />
    </window>
    <window class='dashboard' name='Delays with map'>
      <viewpoints>
        <viewpoint name='Delay Time by Depart and Destination City ' />
        <viewpoint name='Delay Time by States on Map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Delay Time by States with Airport and Airline (2)' />
      </viewpoints>
      <active id='13' />
      <simple-id uuid='{03F6F1F2-C84B-4F3A-8C68-DD1600E92314}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Delay Cause Percent' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Delay Cause Percentage' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAMIklEQVR4nO3df1DT9x3H8VeQYBBEDVKVNkULQaCjeHr+6vW66V3vbP/q7a/+0z/dbbdr
      b3e73dxu81yd29zV6209urkpvbWrrlSq1VqtVASrCMyqgFhUAqkJQkIClEAI+ebH/vDkVpNA
      gO/3+yHf7+vxn0C+33e8PJPvN8n3+zVEo9EoiHQqTfQARCIxANI1BkC6xgBI1xgA6RoDIF1j
      AKRrDIB0jQGQrjEA0jUGQLrGAEjXGADpGgMgXWMApGsMgHSNAZCuMQDSNQZAusYASNcYAOka
      AyBdYwCkawyAdI0BkK4xANKtuqt3kC56CCK1+QNB7H+vFsfrWxkA6Ut7Vy9+9c5JfNM/BAAM
      gPQhEo3ioy+u4c///gJBKTz5cwZAmjc+IeH3VWdx8sv2mN8xANI0h2sIP//LcXxt74/7ewZA
      mtVw7S5+/bdTGBkLJPwbBkCa9P5nLXjzyHlEIlNf/4UBkKaEwxHsf78WR899ldTfMwDSjLHx
      CeyqPIn6a3eTvg0DIE1wDY7g9QPHcKsn/s5uIgyAUl7PfS9+9Mej6PeOzPi2DIBS2tf2frz2
      5kdwDfpmdXsGQCmro7sPP/7TfzA8Oj7rZTAASkktHXb87K0a+PwTc1oOA6CU09Jhx2sHjsEf
      CM55WTwegFJKS8c3sj34AQZAKaTtbi9eO/CRbA9+gAFQirjV04efvlkt64MfYACUAux9Xvxk
      /4cY9s3+3Z5EGADNaw7XEHb+4QgGR/yKLJ8B0Lw17BvH6weOod87uw+5ksEAaF4KSiH8svIT
      dDkHFF0PA6B5JxqNYm/VWTS2dSu+LgZA884/TlzGiYY2VdbFAGheOX35Jt6p+VK19TEAmjc6
      7S68cfjMtIcxyokB0Lzw7eg4fvH2cfgDkqrrZQAkXDgcwW8Pnoa9b1D1dTMAEq7q1BVc+OqO
      kHUzABLqUqtN1Z3eRzEAEmZgyIfdB08jFI4Im4EBkBDhcARvVJ3FwPCo0DkYAAlx7MIN1H+V
      /Pl7lMIASHXdvR68daRO9BgAGACpbEIK4Td//xRjMh/YMlsMgFT1zxONaLfdFz3GJAZAqrlz
      z413P70ieozvYACkilA4gn3vfv6dyxPNBwyAVHGs7jqu3XaIHiMGAyDF9XtH8HZ1g+gx4mIA
      pKhoNIr979dOeZkikRgAKeriDRvOt9wWPUZCDIAUE5RC+OuH9VDv8JaZYwCkmI/rW3Hnnlv0
      GFNiAKSIYd84Dh6/JHqMaTEAUsThk43wDI+JHmNaDIBkZ+/z4mhtcpcpFY0BkOwOfnwJE8GQ
      6DGSwgBIVl3OAXze3Cl6jKQxAJLV4U+uQArNr+/7TIUBkGwePPt/LXqMGWEAJJvDJ1Pr2R9g
      ACQTm3MAnzel1rM/wABIJv863Zxyz/4AAyAZ9HtHcDYFn/0BBkAyqLlwA+MT6p7UVi4MgObE
      Hwii5sIN0WPMGgOgOTnbdAsDQ2LP7jYXDIBmLRSO4MjZq6LHmBMGoILq6urv/Lu5uRljY2OI
      RqOIRh8cLtLb24tdu3ZhYmIC169fn3J5AwMD2LdvH2prawEAg4OD2LVrFyorKyeX6Xa7cerU
      qbi3P3ToEPbu3QubzTa5/kc9+vO6utgzubXeceL2PP++/3TSRQ+gB06nEwBQU1ODK1euwGQy
      wW63w2azQZIk7N69Gw0NDcjNzUVfXx86OjpQWVmJTZs2weVyoaCgAG1tbXjppZdQU1ODrVu3
      YmhoCB988AGys7OxZs0alJeXIxgMorq6Gp2dnSgtLUU0GkVVVRUcDgdycnKwYsUK7NixAx6P
      B8XFxThz5gzcbjdKS0tx7tw5bNmyBR6PB4WFhejs7ERFRQUuXrwIs9mM7u5uZGVlYfPmzZP3
      K5W3/R/iK4AKRkdH0dXVhcbGRng8HpSXl6O4uBjt7e3IyMhAJBJBe3s7JElCQ0MDAoEA1q1b
      B6vVivXr1yMzMxM7d+7E1atXYTAYkJeXh23btqGiogJWqxUA4HA4YLPZMDQ0BJ/vwYWlA4EA
      Wltb4XK5UFRUhNbWVpjNZoTDYRQVFWH9+vXo7e2F0WjEhg0bsHr1amzcuBEejwd+vx/hcBjP
      PvsslixZgvLychQVFU3epyGfH/XXxJ/cdq4M0USvgSSbtrY2SJKE9PR0RKNRWK1WdHZ2wmw2
      Y2BgABs3boTT6UR+fj6cTudkFKtWrUJzczPy8/ORl5cHj8eD+/fvo7i4GNFoFOFwGF6vF4WF
      hWhqakJpaSmWLl2Ky5cvo6SkBGlpabDb7Vi8eDG6u7uRmZmJ7du3w+FwwGKxIBKJoKmpCRaL
      BWlpaVi1ahWamppQUlKC1tZWlJWVwWAwIBgMwmg0Ynh4GGvXrgXw4Dw/vzt0RvD/7NwxAJ2Q
      JAlGo1GWZUUiUby65z20dfXKsjyRuAmUYjo6OtDT0wMA8Hg8qK2txdjYGAYHB+H1etHb24uW
      lhaEQiFcvHgRLpcLAGR78APAXYcbHd3z5wS3c8Gd4BQyOjqKEydOIBgMYs+ePRgdffD+e3V1
      Nbq7u/H888+jsbERK1asgM/ng9FoxMGDB7F7925Z5/issQNhFa/lqyS+AqQQv98Pi8UCs9mM
      UCiEvLw81NfXo6CgAK+88goAwGq14ubNmzAajaivr5/8uVxCoTDO/1fMFR2VwFeAFJKbmwu3
      243s7GzU1dXBZDLBbDYjGAyirq4OgUAAZWVlsFgskzvSdrsdxcXFss3Q+Y0L91zqX89XKdwJ
      phl562gdqk41iR5DNtwEoqSFQmGcv6qdzR+AAdAM3L7nxr1+7Wz+AAyAZqD+2l1obYOZAVDS
      Lt2wiR5BdgyAkuIaHMFdx4DoMWTHACgp1zodmJBS43SHM8EAKCmX23pEj6AIBkDTCkohNHfY
      RY+hCAZA0+q574VrcET0GIpgADStq533NPf250MMgKbV3qWNrz7HwwBoSqFwBK13U//Al0QY
      AE3JPeRDv1eb2/8AA6Bp3OruQygcET2GYhgATUnLmz8AA6BptGl4BxhgADSFQFCCvc8regxF
      MQBKyPvtGIZHx0WPoSgGQAnZnB5ENHL2h0QYACXU5dTe158fxQAooTspfubnZDAASsjW6xE9
      guIYAMU1HgjC5fWJHkNxDIDiGvFPwOcPiB5DcQyA4nIP+TT9FYiHGADFdX/gW9EjqIIBUFxa
      PQLsUQyA4nK6h0WPoAoGQHH16+AdIIABUAKe4dS9+PVMMACKa3jUL3oEVTAAihGUQhifkESP
      oQoGQDECwRAmgto7DWI8DIBiBIISAkG+ApBOjQckSCHtfwoMMACKQw/fAXqIAVCMiFbPgxgH
      A6AYwz5tHwf8/xgA6RoDIF1jABRjdHxC9AiqYQAUQ5LCokdQDQMgXWMAFGORKUP0CKphABRj
      YUa66BFUwwBI1xgAxViQpp+HhX7uKSVtSbZJ9AiqYQCkawyAYizLWSR6BNUwAIqxMCMdC436
      eCeIAVAMU4YRpoUMgHTKlJGOhUaj6DFUwQAoRvqCBcjK1MenwQyA4lq6OFP0CKpgABRX3tJs
      0SOoggFQXPnLl4geQRUMgOLKz1sqegRVMACKa2XuYtEjqIIBUFxP8BWA9GxZziJdfBrMACiu
      nCwTcrK0/61QBkBxZRjT8cRj2t8MYgCUUOETy0WPoDgGQAkVP/mY6BEUxwAoIauFAZCOFaxc
      BmP6AtFjKIoBUELLchZh+ZIs0WMoigFQQukLFqDIkid6DEUxAJrSM0WPix5BUQyAplRhZQCk
      Y2uffAwmDZ8qkQHQlJblLELBKrPoMRTDAGhKBoNB0/sBDICmpeX9AAZA09pQ8iTSF2jzoaLN
      e0Wyyl++BGvyc0WPoQgGQNNKSzNg89OrRY+hCAZASXluXaHoERTBACgpzxTmY/GihaLHkB0D
      oKQszjLhe4X5oseQHQOgpP1gvVX0CLJjAJS05yqe0tzbodq6N6Qoy4plKFuzUvQYsmIAlDSD
      wYAXNpeIHkNWDIBmZPuGYk1tBmnnnpAqtLYZxABoRgwGA17YpJ3NIAZAM7Zja5lmDpJhADRj
      K3NzsLV8jegxZMEAaFZ+uG2d6BFkwQBoVrY8vRorc3NEjzFnDIBmxbTQiBe3lokeY84YAM3a
      y99/JuU/E0jt6Umopx5fnvIHyjAAmpNXX9wkeoQ5+R9IRPVDvyOwkwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Delay Cause of Airline ' width='192'>
      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
      /wR8N4xMdGuJVwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Delay Time by Depart and Destination City ' width='192'>
      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
      +HT+H02ASznW8/kVAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Delay Time by States on Map' width='192'>
      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
      cyio/leOVOoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Delay Time by States with Airport and Airline (2)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2923MbV7bm+UtkIjNxv5ME7zRl2ZZcPgq76pQ9XR1Vpx129fRDP3R0T8xD
      v83/Nn9CR8x0nJipPj4u18h21bHdkiVeRIoXXAggcUfikpnzQOc+okRSvCRFCMgvQhE2AWxs
      ALly72+vb31LchzHwYePKUXgtifgw8dtwg+AMYRlWXQ6nduexlTADwAfUw0/AHxMNfwA8DHV
      8APAx1RDAXAch3a7fdtz8fELbNtmMBhg2/a1x+o3DNR23YNZHc8rEPDmnunVWI7jgANSQLrS
      66UX8wDD4ZCdnR0SiQSJRIJut0sqlbry5Nzx8vk80Wj01OcYhiHeo91un/k8x3HodDpIkkQk
      Ennl8UqlQjab5dmzZywvL9Pv9wmHw688z7Zter0ekUgEwzBIJBI0m02SySSdTgfHcU7MwR13
      a2uLpaUlAFRVxTAMkskk3W731PnU63Xi8fiVfmTLsjBN89RxLwtn+2fs//Z/XnucSYXy4v88
      f/6cXC5HoVBA1/UTF+dV8Pz5c3FRZjIZ2u02e3t7pFIpTNMkn8/jOA5HR0e0222GwyG6rlMq
      lUin0+Li0TSNTqfDcDhkYWGBzc1NdF2nUqmQSqXY2triww8/JJPJUC6XAahWq4TDYdrtNrIs
      I8syvV6PVCpFp9Phk08+oV6vE4vFePLkCQDxeJxer0cgEODg4ID19XV6vR6JRILt7W0xt0wm
      w2g0IpVKUSgUKJfLqKpKoVBgbm6OfD7PaDTi8PCQfr+PruvMzc1d67v0cTM4sQK0Wi0ODg7Q
      dZ1arcbc3Bzz8/NXHtwdD6DX66FpGo7jkE6nj99ckrBtG0k6Xr5M08SyrFfuwo1GA0VRGI1G
      xONxms0muq6jaRrFYhFAXGClUgnHcej1eqytrfHTTz8Rj8cZDAYEg0Hu3LnD1tYWd+/epV6v
      s7OzQzgcJpVK0Wg00HWdbreLZVkEAgEcxyGVSiHLMrVaDYC7d++yt7eHLMtYlkUwGMQwDGzb
      Jp1O0263icVi4rP1ej2i0SiJRAJN0177vfkrwJuDNMlSCMdxztyijDO8DIBRpUhg+7EHsxpn
      DuAgXXEsyTmGT4LHCC4J1nX92mONuh2Ubuv6k5IkrGQWWZavPxbHQe7FWI7j4DjOlYNJgeOt
      SCwWw3Ectre3yWQy1Ot1VldXrzW5er1OpVJheXkZVVVfeXx/fx/HcQS5fBkuB3ndnbzdbhMO
      h+n3+4RCoROP2bYtyO7BwQErKysn5heNRmm32ySTyVfGNU2T4XBILBZ7ZcydnR1mZ2eJRCJ0
      u106nQ65XO7cz3FReLkC0DbgX76+/jhBldEf/wuKorz+uRfAaDTyZCzbtnEc58rBdGIGg8GA
      J0+e8Hd/93eeaFEajQadToeNjQ2KxSK5XA7btrEsi3w+T61Ww7ZtKpWK+DD9fh9N0/joo4+o
      Vqs8efKEWCxGt9ulWq0SjUZJp9N0Oh3i8TgbGxskk0nef/99dnZ2UBQFy7KQJAlVVen3+2Sz
      Wer1OvV6/ZUAKBQKjEYj/vSnP3Hv3j0qlQqzs7Ps7e0RCoVIpVJUKhUODw/RdZ14PE46nebZ
      s2dIkkSr1SISidBqtajVanS7XVqtFrqu02w2+fzzz6lWq2xubiLLMqFQiA8++ODa360Pb3Ai
      AKrVKp999hmFQoHhcIjjOIKgXgW6rnP//n329/eZm5tDlmVM00RVVVRVJZvNks/nefz4Maqq
      ihMbVVUJBAKEQiFWV1dFhCuKQiKRYH5+nnq9TrPZZHFxkXA4LI5HbdsmkUig6zqNRgNN09B1
      HdM0SafTVKtVgsEg8XicUCjEwsICjx8/ZmVlBV3XxelTIpFAlmU0TWM4HJLJZEgkEsAxof/V
      r37F0dERuVyOWCyGZVnEYjHi8TjBYJB0Ok2pVGI4HBIKhcRKY9s2zWaTeDx+vV/Ohyd4YyTY
      cRwODw9JJBKnnvU7jiPO8L1aZt9WeEqC6zWU4vPrTyogM3rng4nbAvkkeAxxKRLcNGA0OvPh
      vgNa5nRucll4RVy9HMtTEtxsNgkEAvz888/8+te/vvbkSqUSjUaDXC6HaZpiq9BsNlFVlb29
      Pe7cuYOiKAyHQ7rdLtlsFsMwCIVCyLIssrTtdptarcbi4iK9Xo9wOCzyBu72aH9/n/n5eWzb
      JhwOU6vVSKVSNJtNRqMRi4uLJ+bXbDapVqusrKyIL9DNFPd6PbLZ7Kmfq9friW3a9vY2CwsL
      BINBkdSbmZk59cc9PDwUW7/zcKkV4H8+hFbjzIflSILw6juvH+cC8Oqu7eVYnpLg4XDI0dER
      1WqVwWBw6snNZdDv91ldXeVPf/qTSDbF43Fxsfd6PY6OjsQHGA6H/Pjjj8RiMbLZLIlEAtM0
      OTg4QJIkFEVhe3sb0zSRZZlIJIKiKAQCAZrNJtFoVCSkjo6OACiXy7RarVNPmkajEZ1Oh6dP
      nzIcDonH44LEKopCsVik0+mgKIo4EZIkiUQiQTabJZVKsbm5STAYpFarkc1mKRQKGIZBt9tl
      OBwSCARotVr8/ve/p9vtkkwm+e6771hcXGR2dvZa3+9F4NUde1JxIgBCoRDxeJwvvviCRqNx
      7QCIx+Ps7u7ym9/8hnK5TCKRwLIsIUe4f/++uMA0TUOSJMLhMIPBgGg0iiRJJ44PTdMUj7uE
      FI4zzrlcjuFwSCKRoNFoEIvFUFWVRqNBKBQ69ZhTURQRfIFAQNzZE4mEIKmuIM3NXjuOIwKh
      Xq/z61//mmKxSCaTYW5ujlarRTQaJZVKCT1QrVbDNE0cx6FWq6GqKsPh0NM76lmwLOtGx3/b
      MdGZ4LcVl9oC7T+Dvnnmw11JJvzOXU/mNfFbIK/hJtbm5ubOTWKdpQD1cQEsrp392KCPfA4/
      8HHDAdDv93n69Cm2bTMajRgOhyLRNRgMkGWZTqfD+++//1pieBOo1+sYhsHq6uor+Y52u32q
      9Hpra4vV1VUGgwGaplGr1QiHw6dKr6+rpr02jArWxiP43Re3N4cxx40GQK1W47e//a2oCZAk
      iVKpRCQSIRAIkMlkCAaDNzmFc1Gv1xmNRnz77beEQiH6/b7gPc1mk3w+z/7+vjhx+uyzz9jf
      3ycUClEoFAiFQmiaxs7OjlCFujLse/fuYRgG+/v7QvW6vr7+1gnzJh03GgCulNolkO7R4rgk
      ukKhEIuLi+IkyjAMMVdN01BVlXQ6TSaTQVEUWq0Wd+/epd/vE4lEWF1dFfKMTCZDtVolHo+j
      qqqQQ7japGazKTRL18muXxb+KdD58EnwGMKzTHC7Sbd0SHj9fU/m5ZNgH28XonGwrl9XPMmY
      aleIer3OxsYG/X4fOK7/fVkSsr29jWVZdLtdALrdLqZpnqmW7XQ6YrxxgNz1JS7nYapXgEaj
      wfLyMg8fPsQwDO7evYthGCwsLPDo0SO+/PJLyuUykiSJvX42mxWZ30qlgiRJHB4eMjs7y8zM
      DNFolEKhgGmaxONxstnsrZxwufATYedjqgPAPcGZn58nlUoRiURQVVUU7Jumyfz8PJZlEY1G
      WVtbo9frUSgUiMfjLC0t0Wq1CAaDzMzMUK/XxTizs7Ni1Wi1Wq8U1fgYD/gkeAzhpRy6X6+h
      JdMezMonwT7eRsgKVEoXe64kQWbmZuczZpjqAHClGuvr66c+3ul0Tr0Lu6+7qAz6NjPCWqcJ
      D/90sScrQfhf/7ebndCYYaoDoNfrsbm5yWAwwDAMwuEwzWZTZH4XFhaEsvT58+ekUil0XWdp
      aekVGfTh4eGpMug//OEPGIbB9va2yHrfv3/fT1CNCaY6AFw5897eHmtrx6IyRVHIZDLIssxo
      NBI1wTMzMyJLfBkZdK/XQ9d15ufnGQwGot7gNHm2jzcPnwSPITwlwdUjtErhYk8OyPDu/TMf
      9kmwj7cPqnY5Ylspnv1YLAljouPyCpP1aS6Jq5JgwzCo1+ssLy+LO49lWTQaDbFNqlQqBINB
      FEUhEolQqVQIhUKnjvdiVZzX0Np1+Mv/481g//Y/gHZ9t7pxwlQHwFVJsK7rjEYjDg4O2Nzc
      JJvNEggEGI1GfPXVV/zDP/wDhUJB+AoVi0XBE07LHkciEYrFIv1+n08++eS2v5apwlQHwFVJ
      sKvvHwwGzM7OEggEhIXiysoKqqqKO72qqrz77rvC9XppaYlmsymyx41Gg1QqRTQaZXZ2lmaz
      ieM4167H9nEx+CT4mnAch4ODA5LJpGelnWNpjAWMltZRIt5IOsaFBPsBMIbw9BSo1UA1ux7M
      CmzLJiCfISCWAkjZi9u8jEsATPUWyHWNLhaLmKbJ8vIy9XodRVEIBoMXugBvve73NVBbdfjz
      P3oy1rna+aAK//G/evI+bxJTHQBuiyTXpdpxHIrFIoFAAF3XKRQK5HI5qtUquVyOn3/+mcXF
      RWKxGPv7+3zyySei7heO79zvv/++J77+Pt4MprogJpVK8dNPPxGLxYT7WzgcFu2X3n33XRRF
      IZlMIssyi4uLwubRlULruk42myWTyaBpGs1m87Y/lo9LwOcAl0Sj0SAcDt+om4W3JLiKfOgN
      CT63rZEsI7330cXn5XOAtxMvWjK+DbACCvIlyOm5sG04x4XZKR+++sd0Dkm5Peub12GqA8B1
      h45Go2e2N3LhOth1u13q9TqJROK1GV7Lsmi327caNGqrDl//356MdaX98hf/CZIZT97/JjDV
      AeC6Q7fbbarVKnB8qiPLMolEgv39faLRqOg9du/ePfb29uj3+wyHQ3744QeSySThcJiNjQ0U
      RRE9kWOxGO+99x77+/s8fvyYYDBIPp+/VttZH95jqkmw6w4djUbRNI1Go8GDBw+IRqOMRiNy
      uRxLS0uEw2FmZmaQJAld14lEIgSDQVZXV0kmk6iqyuzsLMlkkvn5edbW1kTThkgkwvr6unC/
      brU86NjowzP4JPgXuNblmcztL9eeJsIqZdTSngezumJv3/UPkPRXfVPHhQT7ATCG8DQAmg1U
      8/odPwFsyyJw3Uo2TUdKpMcmAKaaA7iZYLcNU6fTEVsiF5VKhWw2y9bWlugyo6oqhmGQTCbP
      7F/sVoV51Vn9qlBbBnz1f3kyliefZHEN/s2XXozkCaY6ANxM8JMnT4Djjja9Xo9AIMDBwQHr
      6+v0ej0SiQTb29vouk6pVCKTyTAajUilUhQKBcrlMqqqUigUmJubI5/PMxqNODw8pN/vo+s6
      c3NzYy2ZmFZM9RaoXq+zs7Mj+pc1Gg10Xafb7WJZFoFAAMdxSKVSyLJMrVYD4O7du+zt7SHL
      srBFd3uTpdNp2u02sVgM27aRJIler0c0GiWRSFyo6MXLLZBzsOPZCuAJFteQ/s2XY7MFmuoA
      GFd4mgk2KsgHO9efFFckwS8jnkJaXh+bAJjqLdA0wJKDyLm8N4PZ1nHh/DXhlA6QbAvn5bEC
      ASSv5npBTHUAuDXBs7OzhMNh6vW6qPqCV9skGYZBs9lkZWVFPOd1fYVt2xYiuxeJtCzLGIZB
      NBq9UfWo2qzB//hvnozlJZ0/dSxVh//8f3j4Lq/HVAeAWxPcaDRYWFig3W7z9ddfi3ZOg8GA
      VCqFoiiibWu32+XRo0fYtk08HqfRaDAajUSN8O7uLuvr6yKLvLCwgGEY3L9//wSRTiQSSJLE
      kydPhLDO7aH26aef3vI3Mz2Y6gBwa4ILhYKo811cXCQcDhOLxTBNE0mSRB9hWZZFD2PHcWi1
      WkQiEeEe3e/3WVxcRFEU5ufnRV9kt4H3gwcPMAxD1A6Xy2Xi8bhwlg6FQnS7Xdrttt9L7A3B
      J8FjCE9JcK2CfLDtwaw8IsHnjSUrSPc+vvQ4Y3cK5DjOK51WfFwcruPEqdyg2z63MfbL6NsO
      WuZ8petFYVmWZ56mXo3lOI7QXV0FN7IFkiSJWCxGo9Fgc3OTSCTCzMyMSB7t7++jqqrw2Gk0
      GvT7fVKpFL1ej3Q6TafTodfrMT8/T6FQQNM0FEURdiG9Xg9FUYjFYnz33Xe89957wp6k1WqR
      z+c5OjoilUqxt7dHPB5ndvakLn5c+wSfuwIUd+D51oXHksNxwqvvXHoOp8G3RrwkEokEqVSK
      4XBIrVbj4OCAxcVFTNNEURQajQY7OzsMh0PS6TSVSoVSqcTBwQG5XE5czL1ej06nI6TLjuOw
      vLxMtVrlgw8+oFqtsr29jSRJZDIZhsMhX3/9NUtLS/z4449ks9lTLUumoU+wPGFWhl7jxjmA
      YRjiv6vVKjMzM3Q6HSzLEtFrmiaZTIbBYEC73Rb1tbZto6oqvV6PZrNJKBTCNI+X/0AggG3b
      xGIxEokEe3t7RCIRNE3jyZMnrKysYBgGuVyOcDhMrVYjnz95xuzKGk7rE9xqtcTRqNsnOBgM
      0uv16Pf7mKYp+gS3Wi3RJ/jFVUpRFLGyuHojV1Z9Hs5dATZ+vNQK0A3HCX/27y78/PMwiSvA
      xJFg2z5uC3rbIrTr4NwAqJagYbz69zPQlQKE1+56Mq9JDICJWx/f5gv/QsjMHv+7IORW83zH
      59dBCkx026SJC4DLYDrcoRvw//2/Vx8gGIT/8L97Np9xw1QHgO8O7WOqA8B3h/YxcST4TePt
      cIe+Rk2wLMO7Hx6PNYEk2A+AMYS37tBNtL4H7tBSgFEiPXEBMNVboGkwxtLaDW9aJAVV+ON/
      vv44Y4apDgDfGMvHhB+anw/fGMuHzwF+waQaY12bBLsIyIzeed/nAJMKV0g3abBkBeUSmePz
      IFVLEE9CaHKKdaY6AKahJlhr1+Ebb/oEywC/+g3cuefJeOOAqQ4AvybYx1QHgF8T7MMnwWMI
      TxNh1TLaaZ1brgDbtgnklyB9/RLLiSbBfk3w9eDqjNzahuug3x8y0C8p0YhETyW6oo7Xg6Pc
      qagJrtfrHB0dsby8jKZpwmn5PNi2zZMnT5idnT1BSM+SJrtjPnv2jOXlZfr9/qn1uY7jvOLk
      PK5yaC9XgFinDj9+c7kX3f8EZuZe+fMkaoFulAO4JyYPHz5kbW2Nw8NDceriOI4oIczlcmxs
      bNDv9/n88885PDxkNBrxT//0T6ysrDAajchms2xubqLrOpVKhVQqxdbWFh9++CGZTIZyuQwg
      anLb7TayLCPLsjihMQyDv//7vxfz8+XQPm40ADRN49mzZywuLlIqlYRacjAYiGVLURTK5bKQ
      FEiSxPr6Ot1ul5WVFWKxGJVKBVVV0TQNTdN45513KBaLLC4uous6/X6fubk5HMchEomwtrYm
      +v8OBgPS6TTr6+tsbGycmJ8vh/ZxqyTYcRw6nc65MmLDMMSFdplxz2pc4TXeCjl0af9yL8rl
      TyW6k7gF8o2xxhC2bTOoltE9uED6Dmjp83nXReEbY10QLgmuVqsEAgFhYZJKpYSs2MVpxLhc
      LtNsNllfXxcWIufd1SuVCplMhmfPnjE7O3vmnfPl9x5rEvy3PxOxh6fO6zJQYym0lbVrjwOT
      uQLcKAcYjUYUi0UGgwGZTIZvvvmGdDotsqHpdFq4q5mmieM4hMNhcTF1Oh0hUAsGgwyHQyEt
      cCXLhmEwMzODLMvCHKvdbhMIBOh2u8KbZzgcYlkW7777rtD8TAMJtqyRp+NNGm6UAziOww8/
      /IDjOGQyGZEFdU2xYrEYAP1+XxDjUCiEoihCq++S3NFoRCgUotfrEQwGicfjwiXOHVNVVcrl
      srjAy+UyoVAI27ZJJBIiGNwV5/DwEE3T2NvbExyjWq2eIMGNRgNJkrAs6wQJ7na72LZNv98X
      JDgSidBut3n//fc5ODgAjkmwqqqCBAcCAZrNJr1eT5Dgubk5arWaMPZyHAf1h794sgJ0wzHC
      v/3DtceByVwBxj4T7DgOh4eHJBKJS5HMXq+Hqqqe7VnPwo2R4O0nRJTrz70vB9GWfW/Qs+CT
      4DGET4IvjrEmwW7NbS6XO/Xu6DgOe3t7aJrG7Oys2Ke/Th7caDQYDodnkkp4lfCehmkgwXI4
      RtgnwWfiRkmwWxQOsLOzgyzLgmAeHR3x6aefYpomlmXxl7/8hdFoRDKZZG9vj3A4TCQSQVEU
      FEWh2+0Si8WE7bplWcRiMf7lX/6FSCQiGi64BFtVVR48eHBuME0DCZblqRb8vhY3+u24URkI
      BNA0DVmWaTabaJom7oSWZQEIj33HcZidnWV5eZnDw0MxjmuffvfuXSEUU1WVd955h1qthqIo
      2LaNpmm8//77dDqd185vrDPBHv0G/inQ+Rh7EuzivJrdi2x3bgrjToK7BAivvevBrCZzCyQ5
      x/BJ6xjBJ8EXhyck2CWtjuPw3XffMTc3R7vdZmVlhVAodOXJlUolBoOB2J5ks1larRZHR0cA
      5PN5QfzcJJfruaMoCjMzM/z1r3/lww8/pNfriUopN+p1XRd/c7dFiUTiwkKyq5Jg93ULCwsE
      g0Ecx+Ho6Egk5F7GZVsl+ST44vCUBDebTY6OjggEAnQ6He7cuXOtyfX7fdrtNq1Wi5WVFb76
      6is+/vhjVFVlNBpRLpdFOaKu66iqKhSd8/PzFItFqtUqGxsbLCws8P333/Pxxx+LLYdbWJ7N
      ZkXS68UOLa/DVUnw0tISm5ubBINBarUa2WyWw8NDDMOg2+0yHA4JBAK0Wi3+8Ic/YBgG29vb
      ovb3/v37N56f8HExnOAAtVpN6OxdzX48Hr/y4I1GQ5yC9Ho9UqkUs7Oz7O7uCrtA1yjKvZP2
      +30hY9Z1XbQ/ckmxu1K8eNzoBlQwGCQWi134bnvVTLBt2+i6TrFYJB6Pk8/n2djYIBqNoigK
      9XqdeDxOrVZjdXWVVqsliuy73S75fJ5kMnnmvCzLwvzqv3uyAvRjKbRf/+7a48BkrgBvDQme
      Jvgk+OIY6zzAyyWRcDFV54v769M+mKsH8urHGEvMr4AH9QDHLZJKF3+Bqh2bX00JbvQKajQa
      NJtN/va3vwnvHTg+a2+32/T7fVESub+/z+LiIpFIhI2NDYLBoDCOKpfLQsgmyzKO4wjfzutg
      KoyxOk14+KeLv2BuEX7z+xubz7jhRgNA13UWFhZEw2pJkuj1emKPr2kauVyOZrNJNptF13VR
      t3t4eEgqlSKdTlOr1YhGo1iWRSaTIRqN0mg0rj0/3xjLxxvlAIVCgXA4fCm//Ivqg64ClwQX
      CgWRle10OqcaY+m6jizL7O3tCWMs1zb9RWMsV9Y8GAyEMdZoNCIejxMIBDAMA0mSWFtbo1wu
      i97JLxpjpdNpIpGINyWdxX3PVoBJ5AA+CR5D3GpNcDQOC6unjzWBATDBLNIH/OIOfVknt6PC
      qX+WbBtezLhqOsQvnuAbR0x1AJxm3KXr+glNz/b2NisrK8Jwq9vtEggEsCzrjff8vQq0Vh2+
      +UdPxnrlHju/DJ9+7snYt4WpDoBGo8Hy8jIPHz7EMAzu3r2LYRgsLCzw6NEjvvzyS8rlMpIk
      iV5i2WxWZIBPkzZHo1EKhQKmaRKPx8lms691w/Nxe5jqANA0jZ2dHebn50mlUkQiEVRVxTRN
      8vk8pmkyPz8vSO7a2hq9Xo9CoUA8HmdpaYlWqyWkzfV6XYwzOztLt3vcnbHVaon6Zx/jBZ8E
      jyE8dYeulNGODjyYFaLoSCCWgMWr1Rv7JNjHm4Gm4WRfNbq9ChzLxpFfkh0fFUAKIGW9acP0
      pjHVATCuNcFeQm3V4c/ekOAzFfdBFf7jf/XkPd40pjoApqEm2Mf5mOoAGOuaYN8d+o3AJ8HX
      xPi7Q1eRD597MKtTSLALWUZ676PLzWtMSLAfAGMIT0+Bmg1Us+vBrMC2LQKBC15o0ThS+Oz5
      j0sATPUWyDXuikaj5HLnywVc54lut0u9XieRSLyW3Lq+SJcR/3kNtVWHr/+7J2Ndquz8wWfw
      7n1P3vcmMdUB4BrwttttqtUqcHzC4zpPu5JmV/V579499vb2ROH+Dz/8IDrbbGxsoCgKz549
      I5PJEIvFeO+999jf3+fx48cEg0Hy+Tzz8/O3/Kl9vIireUlMCBRFwXEcotEomqbRaDR48OAB
      0WiU0Wgkim7C4TAzMzOieD8SiRAMBlldXSWZTKKqKrOzsySTSebn51lbWxNWHZFIhPX1dTRN
      Q5IkUQPtYzzgc4BfcJ7x1puGpyTYqCIf7nowq3NI8GmYW0TKzJw9rzHhAL479BjCPWI9twio
      acAFbA/7NmiZ6ze2hgk2xvIartFWqVSiXq8TDAaF58/i4iIHBwdkMhkajQbxeJxnz54JJabr
      +uyWFrp3wsFgIHx/nj59SjgcFuSz1+txdHTE0tIS/X4f4BVZ82kYVzn0hVaAR99Cq/7aseRI
      gvCq3x/gLNwoCTZNk3q9jiRJ4pTFtm2Ojo6E2VWj0UDXdWzbZnNzk2g0SjQaxTRNGo0Gz58/
      JxQKkUqlODw8ZH5+npmZGfr9PoZh0Gg0kGUZVVUpFoviPYLB4GsDYBrk0L4B1/m40QBIJBKM
      RiN0XT/RvT0cDpNKpUgkEnQ6HXE3uH//PpZlIUmSWDVyuRy5XA5d19na2iKZTLK5uUksFiOb
      zYofuNvtikL2ix47ToMc2nXf9nE63hoS7PqFul0jJxkX2gLtP4OB+dqxusiE37nrybz8LdAl
      Ua/XsW0bSZJEi9RwOCzO1V+EbdsYhkE6nT613alrHQL/mpQ6OjoiHA5TKpV45513Tm25OrFY
      vIDhbaOGPPL7A5yHGw2AZrNJu90mGAzyz//8z2QyGdbX19nd3SUYDIrtjqZpmKZJJpOh3+9z
      eHiILMs8ffoUSZJEh0jbtul0Oti2zYcffkij0WAwGFAoHBdxHx0dUavVRFLL5QK6rvPRR69q
      VSY+E/zTd1gO8Lsvbuf93wLcaABomkY0GmV3d5fFxUWxD3ZNrhKJBLqui9MgXdcZDoesrq7S
      6/WYm5uj1+thmiaapmFZFtlsFtu2geMjMNu2WVlZodFoiFUlnU4LU99ut3tmtxg/E+zjRgPA
      dVx+0W4QYGbmZIIkn8+fOcZ53V9UVcW2bcLhMIuLi5ee34uZYDjuK/zgwQOePYoG4f0AABDI
      SURBVHsmMsGu9XkulxOZYEVRRCb4xc9qWRbz8/PMz88Lm/lIJMLMzAylUklkgt8kIfZPgc7H
      jZLger0uOrm7jS1cZ7R2u83CwsLY/EATmQl+vkV3OCS8/r4n85pEEnyjAbC7u0u/30dVVba3
      t8nlcrTbbSzL4uOPP6ZarV7b4HYS4akcutVEG/TOfoIkQfpsycKLmMQAeGPmuNlslrm5OdHk
      otvtnsgN3AZcEryysiJS6a9ze4Z/7UIfCAQu1Srp8PAQVVXf6EmV1mnCt//j7CcoQfj3/+WN
      zWfc8EY4QD6fF/t897Tlsn2zbgIuCX769CnD4ZB4PE6326XVaqEoCsViUUgbTNNkOBwiSRKJ
      RIJsNksqlXqlVVKhUDi1VdLvf/97ut0uyWSS7777jsXFRfH9+Lg93Fo9wG1f/IAgs7FYDMuy
      xMlUOBwWp0iufFnXddGIT9M00dDviy++EL0N3M/kOkm3221UVaXZbGJZFqFQiGazSTQaFUX0
      E93k4y3AW5MJnib4HODiGGsO4OP2IVtDnNLh+U8qXsw5TrJtnNNkx7EE0pI3itM3jakOAMdx
      +P7778lms0QiEfr9Po7jkE6nabfb1Go1ksmkkHGYpsloNBJbHU3T6HQ61Go1BoMBy8vLtFot
      kskk7XYbWZaxbZt6vc76+jrfffcd9+/fZzAYYFkW3W5XJPjc5KBpmp5uD+VuGx7/1ZOxzlTc
      z6+AHwBvHwzDoFKpoCgK+XyenZ0darUahUJBtEbqdrs0m03W1tZQVZWNjY0TXKDf76PrOpZl
      sbm5Sb1eJ5PJ0Gq1SCQSpFIpgsEg3W6XWq3GwcEBhmGIGoPt7W3y+Ty7u7uiZiIUCo1NfmTS
      MdUBAPDFF19wcHAg5Bhut3ld10WLJLf3ryzLRKNRIpEIjuNgmiaJRILBYMDMzAy2bQtdkK7r
      hEIhgsEgo9GIwWDA559/TqlUIhKJkMlkBAl3iXcgEMA0TXxa9ubgk+AxhLck2ENfIMsm8LI5
      LoCqIyUut23zSbCPN4N+H8qvIcEXxcstkl6Ac1obsvUPkPTbTXa+DlMdAC4JvnfvHoZhCDdn
      tyrMrf1VFAXLsggEAsiyTLfbpdvtks1mRbLL3RJJkkQ+n2dvbw9VVQkGg0IEF41GRcLNlVT3
      +30kSRJdJ+fmvLEyd6H2e/Doe0/GunTZ+cIq+AEwvnBJ8NOnT8XFWi6XxYmMq9rUNI3Dw0OS
      ySSKoiDLsrBDPzg4ED2Q6/U6/X6fSCRCqVQSnKHdbpNMJjEMg9FoxNbWlki6JZNJdF0XLWRf
      Vsr6uFlMdQDAMQne3d0lmUwCx5Vn4XBYSK3r9TqO45DNZk/Iul1SnMvlxOqxtrZGrVZD13XW
      19dF3YJLkF37jmQyKVaA0WhEJBJhbm4OXddptVrYtu27Q78h+L5AHsBVvHpVr3whX6ALYtTt
      ILcbHszq+He91GdM55CU4KkPjYsv0K2dArlv636hL07D3Xdf5HUv/t227Yk4P7/WKdDe9oli
      +b6ioq3c8WRevhTiktjd3RW2KO5ZeqfT4e7duzx+/JjV1VXq9boww2q328zOzvL06VMePHjA
      5uYmkiSRTqeFd2ckEsGyLIbDoSCYbia10+mwvLx84flNJAnef3bCMMuKJMCjAJhE3DgHsCyL
      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
    </thumbnail>
    <thumbnail height='192' name='Delay by Airline and Airport with Cause (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Delay by Airlines' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Delay by Airports' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Delays with map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Most Delay Airline' width='192'>
      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
      ReVy4QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Most Delay Airport' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Delay Count of Each Airline with Avg delay time' width='192'>
      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
      cvfuLwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='chart of delay count' width='192'>
      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
      bKG6upqioiKGhoaQyWRotVqqq6vp7Ozkz3/+s1CHwI/T6aSxsZHg4GB27tyJVColIyOD22+/
      nVdffZWOjg4yMjK49dZbefLJJ5HJZCxbtozLL7983Od77rnn0Gq16HQ6fv7znxMTE8Nzzz2H
      VCrltttuu2gzLZHvP19rDuC/+BwOB6mpqTz88MOMjIxgMpnQ6/XMmjWL3NxctmzZQmhoKD09
      PVxzzTU0NTVx7tw5tFot//Vf/zWujoDFYqGrq4vY2Fh0Oh1GoxGr1SrYHLa1tfHAAw9cMOfg
      drvR6/U4nU6ysrL41a9+xeDgIP39/TQ1NXHttdfS3d1NS0sLFouFyy67jLy8vAn7cblcXH31
      1axbt47Ozk5KS0tZunQpDz/8MCkpKV/3nIr8gJg0AKRSKSaTCYfDgVarFTQ1/sJ2MplMCAyF
      QiHU4fJ6vVitVoaGhigoKMDlciGXywkJCRHkEj6fj7a2NkZHRzl06BBjY2N0dXWNO76/EN7n
      5RH+Ydfn7wYhISGEh4cjkUhwuVxYLBb6+/sFm5XrrruO+vp69uzZM+EzymQywsLCUKlUgt9o
      eHg4KpUKqVQ6oTaxyKXDpAEQHBxMREQEf/vb39i+fTtLliwZdzH6k2H+/ycmJvLuu+9itVqJ
      jo6mq6sLnU5HWloaWq2WZ555hpaWFmH72tpatmzZwm9+8xvuuusuqqqqxu3T7+z2ef7+97/z
      8ssvj9MQfZ7IyEiSk5Pp7e1Fr9czPDxMVVUVgDCBlkgkX5rIW7JkCXv27GHbtm00NDTwl7/8
      5Rutiyzy/WFSWxSfz4fVamVwcBCVSkVsbCxerxeXy4VKpcJoNKJSqbDZbISGhuJwOBgZGRHK
      nY6OjhIUFERUVBQGgwG9Xk9oaKhw9zCbzQQEBKBUKnE6nUL5VP/F6fP5BENcn8+H0WjE4XAg
      k8lQq9XY7XYCAgJwu91Cf9RqNVarldHRUeFOpdVqsdvt4wx2TSaT0PfAwEBhghwQEMDY2Jhg
      8Gu1WoW7i8ilhegLJDKtERNhItOaC/oCiYhMFybMMMVxrsh0QhwCiUxrJg0Am81GVVUVXq8X
      i8VCbW0tTqeTkydPsmvXLs6ePTtO+9PT08Pu3buFifTRo0e/Nf98n89He3v7BXVDIiJTYVIp
      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
      Pz/lU1I+AMUi6K29ivHhAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
